/*
Copyright (C) 2018-2019 de4dot@gmail.com

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

#![allow(unused_results)]

use super::super::super::Mnemonic;
#[cfg(not(feature = "std"))]
use hashbrown::HashMap;
#[cfg(feature = "std")]
use std::collections::HashMap;

lazy_static! {
	pub(super) static ref TO_MNEMONIC_HASH: HashMap<&'static str, Mnemonic> = {
		// GENERATOR-BEGIN: MnemonicHash
		// ‚ö†Ô∏èThis was generated by GENERATOR!ü¶π‚Äç‚ôÇÔ∏è
		let mut h = HashMap::with_capacity(1538);
		h.insert("INVALID", Mnemonic::INVALID);
		h.insert("Aaa", Mnemonic::Aaa);
		h.insert("Aad", Mnemonic::Aad);
		h.insert("Aam", Mnemonic::Aam);
		h.insert("Aas", Mnemonic::Aas);
		h.insert("Adc", Mnemonic::Adc);
		h.insert("Adcx", Mnemonic::Adcx);
		h.insert("Add", Mnemonic::Add);
		h.insert("Addpd", Mnemonic::Addpd);
		h.insert("Addps", Mnemonic::Addps);
		h.insert("Addsd", Mnemonic::Addsd);
		h.insert("Addss", Mnemonic::Addss);
		h.insert("Addsubpd", Mnemonic::Addsubpd);
		h.insert("Addsubps", Mnemonic::Addsubps);
		h.insert("Adox", Mnemonic::Adox);
		h.insert("Aesdec", Mnemonic::Aesdec);
		h.insert("Aesdeclast", Mnemonic::Aesdeclast);
		h.insert("Aesenc", Mnemonic::Aesenc);
		h.insert("Aesenclast", Mnemonic::Aesenclast);
		h.insert("Aesimc", Mnemonic::Aesimc);
		h.insert("Aeskeygenassist", Mnemonic::Aeskeygenassist);
		h.insert("And", Mnemonic::And);
		h.insert("Andn", Mnemonic::Andn);
		h.insert("Andnpd", Mnemonic::Andnpd);
		h.insert("Andnps", Mnemonic::Andnps);
		h.insert("Andpd", Mnemonic::Andpd);
		h.insert("Andps", Mnemonic::Andps);
		h.insert("Arpl", Mnemonic::Arpl);
		h.insert("Bextr", Mnemonic::Bextr);
		h.insert("Blcfill", Mnemonic::Blcfill);
		h.insert("Blci", Mnemonic::Blci);
		h.insert("Blcic", Mnemonic::Blcic);
		h.insert("Blcmsk", Mnemonic::Blcmsk);
		h.insert("Blcs", Mnemonic::Blcs);
		h.insert("Blendpd", Mnemonic::Blendpd);
		h.insert("Blendps", Mnemonic::Blendps);
		h.insert("Blendvpd", Mnemonic::Blendvpd);
		h.insert("Blendvps", Mnemonic::Blendvps);
		h.insert("Blsfill", Mnemonic::Blsfill);
		h.insert("Blsi", Mnemonic::Blsi);
		h.insert("Blsic", Mnemonic::Blsic);
		h.insert("Blsmsk", Mnemonic::Blsmsk);
		h.insert("Blsr", Mnemonic::Blsr);
		h.insert("Bndcl", Mnemonic::Bndcl);
		h.insert("Bndcn", Mnemonic::Bndcn);
		h.insert("Bndcu", Mnemonic::Bndcu);
		h.insert("Bndldx", Mnemonic::Bndldx);
		h.insert("Bndmk", Mnemonic::Bndmk);
		h.insert("Bndmov", Mnemonic::Bndmov);
		h.insert("Bndstx", Mnemonic::Bndstx);
		h.insert("Bound", Mnemonic::Bound);
		h.insert("Bsf", Mnemonic::Bsf);
		h.insert("Bsr", Mnemonic::Bsr);
		h.insert("Bswap", Mnemonic::Bswap);
		h.insert("Bt", Mnemonic::Bt);
		h.insert("Btc", Mnemonic::Btc);
		h.insert("Btr", Mnemonic::Btr);
		h.insert("Bts", Mnemonic::Bts);
		h.insert("Bzhi", Mnemonic::Bzhi);
		h.insert("Call", Mnemonic::Call);
		h.insert("Cbw", Mnemonic::Cbw);
		h.insert("Cdq", Mnemonic::Cdq);
		h.insert("Cdqe", Mnemonic::Cdqe);
		h.insert("Cl1invmb", Mnemonic::Cl1invmb);
		h.insert("Clac", Mnemonic::Clac);
		h.insert("Clc", Mnemonic::Clc);
		h.insert("Cld", Mnemonic::Cld);
		h.insert("Cldemote", Mnemonic::Cldemote);
		h.insert("Clflush", Mnemonic::Clflush);
		h.insert("Clflushopt", Mnemonic::Clflushopt);
		h.insert("Clgi", Mnemonic::Clgi);
		h.insert("Cli", Mnemonic::Cli);
		h.insert("Clrssbsy", Mnemonic::Clrssbsy);
		h.insert("Clts", Mnemonic::Clts);
		h.insert("Clwb", Mnemonic::Clwb);
		h.insert("Clzero", Mnemonic::Clzero);
		h.insert("Cmc", Mnemonic::Cmc);
		h.insert("Cmova", Mnemonic::Cmova);
		h.insert("Cmovae", Mnemonic::Cmovae);
		h.insert("Cmovb", Mnemonic::Cmovb);
		h.insert("Cmovbe", Mnemonic::Cmovbe);
		h.insert("Cmove", Mnemonic::Cmove);
		h.insert("Cmovg", Mnemonic::Cmovg);
		h.insert("Cmovge", Mnemonic::Cmovge);
		h.insert("Cmovl", Mnemonic::Cmovl);
		h.insert("Cmovle", Mnemonic::Cmovle);
		h.insert("Cmovne", Mnemonic::Cmovne);
		h.insert("Cmovno", Mnemonic::Cmovno);
		h.insert("Cmovnp", Mnemonic::Cmovnp);
		h.insert("Cmovns", Mnemonic::Cmovns);
		h.insert("Cmovo", Mnemonic::Cmovo);
		h.insert("Cmovp", Mnemonic::Cmovp);
		h.insert("Cmovs", Mnemonic::Cmovs);
		h.insert("Cmp", Mnemonic::Cmp);
		h.insert("Cmppd", Mnemonic::Cmppd);
		h.insert("Cmpps", Mnemonic::Cmpps);
		h.insert("Cmpsb", Mnemonic::Cmpsb);
		h.insert("Cmpsd", Mnemonic::Cmpsd);
		h.insert("Cmpsq", Mnemonic::Cmpsq);
		h.insert("Cmpss", Mnemonic::Cmpss);
		h.insert("Cmpsw", Mnemonic::Cmpsw);
		h.insert("Cmpxchg", Mnemonic::Cmpxchg);
		h.insert("Cmpxchg16b", Mnemonic::Cmpxchg16b);
		h.insert("Cmpxchg8b", Mnemonic::Cmpxchg8b);
		h.insert("Comisd", Mnemonic::Comisd);
		h.insert("Comiss", Mnemonic::Comiss);
		h.insert("Cpuid", Mnemonic::Cpuid);
		h.insert("Cqo", Mnemonic::Cqo);
		h.insert("Crc32", Mnemonic::Crc32);
		h.insert("Cvtdq2pd", Mnemonic::Cvtdq2pd);
		h.insert("Cvtdq2ps", Mnemonic::Cvtdq2ps);
		h.insert("Cvtpd2dq", Mnemonic::Cvtpd2dq);
		h.insert("Cvtpd2pi", Mnemonic::Cvtpd2pi);
		h.insert("Cvtpd2ps", Mnemonic::Cvtpd2ps);
		h.insert("Cvtpi2pd", Mnemonic::Cvtpi2pd);
		h.insert("Cvtpi2ps", Mnemonic::Cvtpi2ps);
		h.insert("Cvtps2dq", Mnemonic::Cvtps2dq);
		h.insert("Cvtps2pd", Mnemonic::Cvtps2pd);
		h.insert("Cvtps2pi", Mnemonic::Cvtps2pi);
		h.insert("Cvtsd2si", Mnemonic::Cvtsd2si);
		h.insert("Cvtsd2ss", Mnemonic::Cvtsd2ss);
		h.insert("Cvtsi2sd", Mnemonic::Cvtsi2sd);
		h.insert("Cvtsi2ss", Mnemonic::Cvtsi2ss);
		h.insert("Cvtss2sd", Mnemonic::Cvtss2sd);
		h.insert("Cvtss2si", Mnemonic::Cvtss2si);
		h.insert("Cvttpd2dq", Mnemonic::Cvttpd2dq);
		h.insert("Cvttpd2pi", Mnemonic::Cvttpd2pi);
		h.insert("Cvttps2dq", Mnemonic::Cvttps2dq);
		h.insert("Cvttps2pi", Mnemonic::Cvttps2pi);
		h.insert("Cvttsd2si", Mnemonic::Cvttsd2si);
		h.insert("Cvttss2si", Mnemonic::Cvttss2si);
		h.insert("Cwd", Mnemonic::Cwd);
		h.insert("Cwde", Mnemonic::Cwde);
		h.insert("Daa", Mnemonic::Daa);
		h.insert("Das", Mnemonic::Das);
		h.insert("Db", Mnemonic::Db);
		h.insert("Dd", Mnemonic::Dd);
		h.insert("Dec", Mnemonic::Dec);
		h.insert("Div", Mnemonic::Div);
		h.insert("Divpd", Mnemonic::Divpd);
		h.insert("Divps", Mnemonic::Divps);
		h.insert("Divsd", Mnemonic::Divsd);
		h.insert("Divss", Mnemonic::Divss);
		h.insert("Dppd", Mnemonic::Dppd);
		h.insert("Dpps", Mnemonic::Dpps);
		h.insert("Dq", Mnemonic::Dq);
		h.insert("Dw", Mnemonic::Dw);
		h.insert("Emms", Mnemonic::Emms);
		h.insert("Encls", Mnemonic::Encls);
		h.insert("Enclu", Mnemonic::Enclu);
		h.insert("Enclv", Mnemonic::Enclv);
		h.insert("Endbr32", Mnemonic::Endbr32);
		h.insert("Endbr64", Mnemonic::Endbr64);
		h.insert("Enqcmd", Mnemonic::Enqcmd);
		h.insert("Enqcmds", Mnemonic::Enqcmds);
		h.insert("Enter", Mnemonic::Enter);
		h.insert("Extractps", Mnemonic::Extractps);
		h.insert("Extrq", Mnemonic::Extrq);
		h.insert("F2xm1", Mnemonic::F2xm1);
		h.insert("Fabs", Mnemonic::Fabs);
		h.insert("Fadd", Mnemonic::Fadd);
		h.insert("Faddp", Mnemonic::Faddp);
		h.insert("Fbld", Mnemonic::Fbld);
		h.insert("Fbstp", Mnemonic::Fbstp);
		h.insert("Fchs", Mnemonic::Fchs);
		h.insert("Fclex", Mnemonic::Fclex);
		h.insert("Fcmovb", Mnemonic::Fcmovb);
		h.insert("Fcmovbe", Mnemonic::Fcmovbe);
		h.insert("Fcmove", Mnemonic::Fcmove);
		h.insert("Fcmovnb", Mnemonic::Fcmovnb);
		h.insert("Fcmovnbe", Mnemonic::Fcmovnbe);
		h.insert("Fcmovne", Mnemonic::Fcmovne);
		h.insert("Fcmovnu", Mnemonic::Fcmovnu);
		h.insert("Fcmovu", Mnemonic::Fcmovu);
		h.insert("Fcom", Mnemonic::Fcom);
		h.insert("Fcomi", Mnemonic::Fcomi);
		h.insert("Fcomip", Mnemonic::Fcomip);
		h.insert("Fcomp", Mnemonic::Fcomp);
		h.insert("Fcompp", Mnemonic::Fcompp);
		h.insert("Fcos", Mnemonic::Fcos);
		h.insert("Fdecstp", Mnemonic::Fdecstp);
		h.insert("Fdisi", Mnemonic::Fdisi);
		h.insert("Fdiv", Mnemonic::Fdiv);
		h.insert("Fdivp", Mnemonic::Fdivp);
		h.insert("Fdivr", Mnemonic::Fdivr);
		h.insert("Fdivrp", Mnemonic::Fdivrp);
		h.insert("Femms", Mnemonic::Femms);
		h.insert("Feni", Mnemonic::Feni);
		h.insert("Ffree", Mnemonic::Ffree);
		h.insert("Ffreep", Mnemonic::Ffreep);
		h.insert("Fiadd", Mnemonic::Fiadd);
		h.insert("Ficom", Mnemonic::Ficom);
		h.insert("Ficomp", Mnemonic::Ficomp);
		h.insert("Fidiv", Mnemonic::Fidiv);
		h.insert("Fidivr", Mnemonic::Fidivr);
		h.insert("Fild", Mnemonic::Fild);
		h.insert("Fimul", Mnemonic::Fimul);
		h.insert("Fincstp", Mnemonic::Fincstp);
		h.insert("Finit", Mnemonic::Finit);
		h.insert("Fist", Mnemonic::Fist);
		h.insert("Fistp", Mnemonic::Fistp);
		h.insert("Fisttp", Mnemonic::Fisttp);
		h.insert("Fisub", Mnemonic::Fisub);
		h.insert("Fisubr", Mnemonic::Fisubr);
		h.insert("Fld", Mnemonic::Fld);
		h.insert("Fld1", Mnemonic::Fld1);
		h.insert("Fldcw", Mnemonic::Fldcw);
		h.insert("Fldenv", Mnemonic::Fldenv);
		h.insert("Fldl2e", Mnemonic::Fldl2e);
		h.insert("Fldl2t", Mnemonic::Fldl2t);
		h.insert("Fldlg2", Mnemonic::Fldlg2);
		h.insert("Fldln2", Mnemonic::Fldln2);
		h.insert("Fldpi", Mnemonic::Fldpi);
		h.insert("Fldz", Mnemonic::Fldz);
		h.insert("Fmul", Mnemonic::Fmul);
		h.insert("Fmulp", Mnemonic::Fmulp);
		h.insert("Fnclex", Mnemonic::Fnclex);
		h.insert("Fndisi", Mnemonic::Fndisi);
		h.insert("Fneni", Mnemonic::Fneni);
		h.insert("Fninit", Mnemonic::Fninit);
		h.insert("Fnop", Mnemonic::Fnop);
		h.insert("Fnsave", Mnemonic::Fnsave);
		h.insert("Fnsetpm", Mnemonic::Fnsetpm);
		h.insert("Fnstcw", Mnemonic::Fnstcw);
		h.insert("Fnstenv", Mnemonic::Fnstenv);
		h.insert("Fnstsw", Mnemonic::Fnstsw);
		h.insert("Fpatan", Mnemonic::Fpatan);
		h.insert("Fprem", Mnemonic::Fprem);
		h.insert("Fprem1", Mnemonic::Fprem1);
		h.insert("Fptan", Mnemonic::Fptan);
		h.insert("Frndint", Mnemonic::Frndint);
		h.insert("Frstor", Mnemonic::Frstor);
		h.insert("Frstpm", Mnemonic::Frstpm);
		h.insert("Fsave", Mnemonic::Fsave);
		h.insert("Fscale", Mnemonic::Fscale);
		h.insert("Fsetpm", Mnemonic::Fsetpm);
		h.insert("Fsin", Mnemonic::Fsin);
		h.insert("Fsincos", Mnemonic::Fsincos);
		h.insert("Fsqrt", Mnemonic::Fsqrt);
		h.insert("Fst", Mnemonic::Fst);
		h.insert("Fstcw", Mnemonic::Fstcw);
		h.insert("Fstdw", Mnemonic::Fstdw);
		h.insert("Fstenv", Mnemonic::Fstenv);
		h.insert("Fstp", Mnemonic::Fstp);
		h.insert("Fstpnce", Mnemonic::Fstpnce);
		h.insert("Fstsg", Mnemonic::Fstsg);
		h.insert("Fstsw", Mnemonic::Fstsw);
		h.insert("Fsub", Mnemonic::Fsub);
		h.insert("Fsubp", Mnemonic::Fsubp);
		h.insert("Fsubr", Mnemonic::Fsubr);
		h.insert("Fsubrp", Mnemonic::Fsubrp);
		h.insert("Ftst", Mnemonic::Ftst);
		h.insert("Fucom", Mnemonic::Fucom);
		h.insert("Fucomi", Mnemonic::Fucomi);
		h.insert("Fucomip", Mnemonic::Fucomip);
		h.insert("Fucomp", Mnemonic::Fucomp);
		h.insert("Fucompp", Mnemonic::Fucompp);
		h.insert("Fxam", Mnemonic::Fxam);
		h.insert("Fxch", Mnemonic::Fxch);
		h.insert("Fxrstor", Mnemonic::Fxrstor);
		h.insert("Fxrstor64", Mnemonic::Fxrstor64);
		h.insert("Fxsave", Mnemonic::Fxsave);
		h.insert("Fxsave64", Mnemonic::Fxsave64);
		h.insert("Fxtract", Mnemonic::Fxtract);
		h.insert("Fyl2x", Mnemonic::Fyl2x);
		h.insert("Fyl2xp1", Mnemonic::Fyl2xp1);
		h.insert("Getsec", Mnemonic::Getsec);
		h.insert("Gf2p8affineinvqb", Mnemonic::Gf2p8affineinvqb);
		h.insert("Gf2p8affineqb", Mnemonic::Gf2p8affineqb);
		h.insert("Gf2p8mulb", Mnemonic::Gf2p8mulb);
		h.insert("Haddpd", Mnemonic::Haddpd);
		h.insert("Haddps", Mnemonic::Haddps);
		h.insert("Hlt", Mnemonic::Hlt);
		h.insert("Hsubpd", Mnemonic::Hsubpd);
		h.insert("Hsubps", Mnemonic::Hsubps);
		h.insert("Ibts", Mnemonic::Ibts);
		h.insert("Idiv", Mnemonic::Idiv);
		h.insert("Imul", Mnemonic::Imul);
		h.insert("In", Mnemonic::In);
		h.insert("Inc", Mnemonic::Inc);
		h.insert("Incsspd", Mnemonic::Incsspd);
		h.insert("Incsspq", Mnemonic::Incsspq);
		h.insert("Insb", Mnemonic::Insb);
		h.insert("Insd", Mnemonic::Insd);
		h.insert("Insertps", Mnemonic::Insertps);
		h.insert("Insertq", Mnemonic::Insertq);
		h.insert("Insw", Mnemonic::Insw);
		h.insert("Int", Mnemonic::Int);
		h.insert("Int1", Mnemonic::Int1);
		h.insert("Into", Mnemonic::Into);
		h.insert("Invd", Mnemonic::Invd);
		h.insert("Invept", Mnemonic::Invept);
		h.insert("Invlpg", Mnemonic::Invlpg);
		h.insert("Invlpga", Mnemonic::Invlpga);
		h.insert("Invpcid", Mnemonic::Invpcid);
		h.insert("Invvpid", Mnemonic::Invvpid);
		h.insert("Iret", Mnemonic::Iret);
		h.insert("Ja", Mnemonic::Ja);
		h.insert("Jae", Mnemonic::Jae);
		h.insert("Jb", Mnemonic::Jb);
		h.insert("Jbe", Mnemonic::Jbe);
		h.insert("Jcxz", Mnemonic::Jcxz);
		h.insert("Je", Mnemonic::Je);
		h.insert("Jecxz", Mnemonic::Jecxz);
		h.insert("Jg", Mnemonic::Jg);
		h.insert("Jge", Mnemonic::Jge);
		h.insert("Jl", Mnemonic::Jl);
		h.insert("Jle", Mnemonic::Jle);
		h.insert("Jmp", Mnemonic::Jmp);
		h.insert("Jmpe", Mnemonic::Jmpe);
		h.insert("Jne", Mnemonic::Jne);
		h.insert("Jno", Mnemonic::Jno);
		h.insert("Jnp", Mnemonic::Jnp);
		h.insert("Jns", Mnemonic::Jns);
		h.insert("Jo", Mnemonic::Jo);
		h.insert("Jp", Mnemonic::Jp);
		h.insert("Jrcxz", Mnemonic::Jrcxz);
		h.insert("Js", Mnemonic::Js);
		h.insert("Kaddb", Mnemonic::Kaddb);
		h.insert("Kaddd", Mnemonic::Kaddd);
		h.insert("Kaddq", Mnemonic::Kaddq);
		h.insert("Kaddw", Mnemonic::Kaddw);
		h.insert("Kandb", Mnemonic::Kandb);
		h.insert("Kandd", Mnemonic::Kandd);
		h.insert("Kandnb", Mnemonic::Kandnb);
		h.insert("Kandnd", Mnemonic::Kandnd);
		h.insert("Kandnq", Mnemonic::Kandnq);
		h.insert("Kandnw", Mnemonic::Kandnw);
		h.insert("Kandq", Mnemonic::Kandq);
		h.insert("Kandw", Mnemonic::Kandw);
		h.insert("Kmovb", Mnemonic::Kmovb);
		h.insert("Kmovd", Mnemonic::Kmovd);
		h.insert("Kmovq", Mnemonic::Kmovq);
		h.insert("Kmovw", Mnemonic::Kmovw);
		h.insert("Knotb", Mnemonic::Knotb);
		h.insert("Knotd", Mnemonic::Knotd);
		h.insert("Knotq", Mnemonic::Knotq);
		h.insert("Knotw", Mnemonic::Knotw);
		h.insert("Korb", Mnemonic::Korb);
		h.insert("Kord", Mnemonic::Kord);
		h.insert("Korq", Mnemonic::Korq);
		h.insert("Kortestb", Mnemonic::Kortestb);
		h.insert("Kortestd", Mnemonic::Kortestd);
		h.insert("Kortestq", Mnemonic::Kortestq);
		h.insert("Kortestw", Mnemonic::Kortestw);
		h.insert("Korw", Mnemonic::Korw);
		h.insert("Kshiftlb", Mnemonic::Kshiftlb);
		h.insert("Kshiftld", Mnemonic::Kshiftld);
		h.insert("Kshiftlq", Mnemonic::Kshiftlq);
		h.insert("Kshiftlw", Mnemonic::Kshiftlw);
		h.insert("Kshiftrb", Mnemonic::Kshiftrb);
		h.insert("Kshiftrd", Mnemonic::Kshiftrd);
		h.insert("Kshiftrq", Mnemonic::Kshiftrq);
		h.insert("Kshiftrw", Mnemonic::Kshiftrw);
		h.insert("Ktestb", Mnemonic::Ktestb);
		h.insert("Ktestd", Mnemonic::Ktestd);
		h.insert("Ktestq", Mnemonic::Ktestq);
		h.insert("Ktestw", Mnemonic::Ktestw);
		h.insert("Kunpckbw", Mnemonic::Kunpckbw);
		h.insert("Kunpckdq", Mnemonic::Kunpckdq);
		h.insert("Kunpckwd", Mnemonic::Kunpckwd);
		h.insert("Kxnorb", Mnemonic::Kxnorb);
		h.insert("Kxnord", Mnemonic::Kxnord);
		h.insert("Kxnorq", Mnemonic::Kxnorq);
		h.insert("Kxnorw", Mnemonic::Kxnorw);
		h.insert("Kxorb", Mnemonic::Kxorb);
		h.insert("Kxord", Mnemonic::Kxord);
		h.insert("Kxorq", Mnemonic::Kxorq);
		h.insert("Kxorw", Mnemonic::Kxorw);
		h.insert("Lahf", Mnemonic::Lahf);
		h.insert("Lar", Mnemonic::Lar);
		h.insert("Lddqu", Mnemonic::Lddqu);
		h.insert("Ldmxcsr", Mnemonic::Ldmxcsr);
		h.insert("Lds", Mnemonic::Lds);
		h.insert("Lea", Mnemonic::Lea);
		h.insert("Leave", Mnemonic::Leave);
		h.insert("Les", Mnemonic::Les);
		h.insert("Lfence", Mnemonic::Lfence);
		h.insert("Lfs", Mnemonic::Lfs);
		h.insert("Lgdt", Mnemonic::Lgdt);
		h.insert("Lgs", Mnemonic::Lgs);
		h.insert("Lidt", Mnemonic::Lidt);
		h.insert("Lldt", Mnemonic::Lldt);
		h.insert("Llwpcb", Mnemonic::Llwpcb);
		h.insert("Lmsw", Mnemonic::Lmsw);
		h.insert("Loadall", Mnemonic::Loadall);
		h.insert("Lodsb", Mnemonic::Lodsb);
		h.insert("Lodsd", Mnemonic::Lodsd);
		h.insert("Lodsq", Mnemonic::Lodsq);
		h.insert("Lodsw", Mnemonic::Lodsw);
		h.insert("Loop", Mnemonic::Loop);
		h.insert("Loope", Mnemonic::Loope);
		h.insert("Loopne", Mnemonic::Loopne);
		h.insert("Lsl", Mnemonic::Lsl);
		h.insert("Lss", Mnemonic::Lss);
		h.insert("Ltr", Mnemonic::Ltr);
		h.insert("Lwpins", Mnemonic::Lwpins);
		h.insert("Lwpval", Mnemonic::Lwpval);
		h.insert("Lzcnt", Mnemonic::Lzcnt);
		h.insert("Maskmovdqu", Mnemonic::Maskmovdqu);
		h.insert("Maskmovq", Mnemonic::Maskmovq);
		h.insert("Maxpd", Mnemonic::Maxpd);
		h.insert("Maxps", Mnemonic::Maxps);
		h.insert("Maxsd", Mnemonic::Maxsd);
		h.insert("Maxss", Mnemonic::Maxss);
		h.insert("Mcommit", Mnemonic::Mcommit);
		h.insert("Mfence", Mnemonic::Mfence);
		h.insert("Minpd", Mnemonic::Minpd);
		h.insert("Minps", Mnemonic::Minps);
		h.insert("Minsd", Mnemonic::Minsd);
		h.insert("Minss", Mnemonic::Minss);
		h.insert("Monitor", Mnemonic::Monitor);
		h.insert("Monitorx", Mnemonic::Monitorx);
		h.insert("Montmul", Mnemonic::Montmul);
		h.insert("Mov", Mnemonic::Mov);
		h.insert("Movapd", Mnemonic::Movapd);
		h.insert("Movaps", Mnemonic::Movaps);
		h.insert("Movbe", Mnemonic::Movbe);
		h.insert("Movd", Mnemonic::Movd);
		h.insert("Movddup", Mnemonic::Movddup);
		h.insert("Movdir64b", Mnemonic::Movdir64b);
		h.insert("Movdiri", Mnemonic::Movdiri);
		h.insert("Movdq2q", Mnemonic::Movdq2q);
		h.insert("Movdqa", Mnemonic::Movdqa);
		h.insert("Movdqu", Mnemonic::Movdqu);
		h.insert("Movhlps", Mnemonic::Movhlps);
		h.insert("Movhpd", Mnemonic::Movhpd);
		h.insert("Movhps", Mnemonic::Movhps);
		h.insert("Movlhps", Mnemonic::Movlhps);
		h.insert("Movlpd", Mnemonic::Movlpd);
		h.insert("Movlps", Mnemonic::Movlps);
		h.insert("Movmskpd", Mnemonic::Movmskpd);
		h.insert("Movmskps", Mnemonic::Movmskps);
		h.insert("Movntdq", Mnemonic::Movntdq);
		h.insert("Movntdqa", Mnemonic::Movntdqa);
		h.insert("Movnti", Mnemonic::Movnti);
		h.insert("Movntpd", Mnemonic::Movntpd);
		h.insert("Movntps", Mnemonic::Movntps);
		h.insert("Movntq", Mnemonic::Movntq);
		h.insert("Movntsd", Mnemonic::Movntsd);
		h.insert("Movntss", Mnemonic::Movntss);
		h.insert("Movq", Mnemonic::Movq);
		h.insert("Movq2dq", Mnemonic::Movq2dq);
		h.insert("Movsb", Mnemonic::Movsb);
		h.insert("Movsd", Mnemonic::Movsd);
		h.insert("Movshdup", Mnemonic::Movshdup);
		h.insert("Movsldup", Mnemonic::Movsldup);
		h.insert("Movsq", Mnemonic::Movsq);
		h.insert("Movss", Mnemonic::Movss);
		h.insert("Movsw", Mnemonic::Movsw);
		h.insert("Movsx", Mnemonic::Movsx);
		h.insert("Movsxd", Mnemonic::Movsxd);
		h.insert("Movupd", Mnemonic::Movupd);
		h.insert("Movups", Mnemonic::Movups);
		h.insert("Movzx", Mnemonic::Movzx);
		h.insert("Mpsadbw", Mnemonic::Mpsadbw);
		h.insert("Mul", Mnemonic::Mul);
		h.insert("Mulpd", Mnemonic::Mulpd);
		h.insert("Mulps", Mnemonic::Mulps);
		h.insert("Mulsd", Mnemonic::Mulsd);
		h.insert("Mulss", Mnemonic::Mulss);
		h.insert("Mulx", Mnemonic::Mulx);
		h.insert("Mwait", Mnemonic::Mwait);
		h.insert("Mwaitx", Mnemonic::Mwaitx);
		h.insert("Neg", Mnemonic::Neg);
		h.insert("Nop", Mnemonic::Nop);
		h.insert("Not", Mnemonic::Not);
		h.insert("Or", Mnemonic::Or);
		h.insert("Orpd", Mnemonic::Orpd);
		h.insert("Orps", Mnemonic::Orps);
		h.insert("Out", Mnemonic::Out);
		h.insert("Outsb", Mnemonic::Outsb);
		h.insert("Outsd", Mnemonic::Outsd);
		h.insert("Outsw", Mnemonic::Outsw);
		h.insert("Pabsb", Mnemonic::Pabsb);
		h.insert("Pabsd", Mnemonic::Pabsd);
		h.insert("Pabsw", Mnemonic::Pabsw);
		h.insert("Packssdw", Mnemonic::Packssdw);
		h.insert("Packsswb", Mnemonic::Packsswb);
		h.insert("Packusdw", Mnemonic::Packusdw);
		h.insert("Packuswb", Mnemonic::Packuswb);
		h.insert("Paddb", Mnemonic::Paddb);
		h.insert("Paddd", Mnemonic::Paddd);
		h.insert("Paddq", Mnemonic::Paddq);
		h.insert("Paddsb", Mnemonic::Paddsb);
		h.insert("Paddsw", Mnemonic::Paddsw);
		h.insert("Paddusb", Mnemonic::Paddusb);
		h.insert("Paddusw", Mnemonic::Paddusw);
		h.insert("Paddw", Mnemonic::Paddw);
		h.insert("Palignr", Mnemonic::Palignr);
		h.insert("Pand", Mnemonic::Pand);
		h.insert("Pandn", Mnemonic::Pandn);
		h.insert("Pause", Mnemonic::Pause);
		h.insert("Pavgb", Mnemonic::Pavgb);
		h.insert("Pavgusb", Mnemonic::Pavgusb);
		h.insert("Pavgw", Mnemonic::Pavgw);
		h.insert("Pblendvb", Mnemonic::Pblendvb);
		h.insert("Pblendw", Mnemonic::Pblendw);
		h.insert("Pclmulqdq", Mnemonic::Pclmulqdq);
		h.insert("Pcmpeqb", Mnemonic::Pcmpeqb);
		h.insert("Pcmpeqd", Mnemonic::Pcmpeqd);
		h.insert("Pcmpeqq", Mnemonic::Pcmpeqq);
		h.insert("Pcmpeqw", Mnemonic::Pcmpeqw);
		h.insert("Pcmpestri", Mnemonic::Pcmpestri);
		h.insert("Pcmpestri64", Mnemonic::Pcmpestri64);
		h.insert("Pcmpestrm", Mnemonic::Pcmpestrm);
		h.insert("Pcmpestrm64", Mnemonic::Pcmpestrm64);
		h.insert("Pcmpgtb", Mnemonic::Pcmpgtb);
		h.insert("Pcmpgtd", Mnemonic::Pcmpgtd);
		h.insert("Pcmpgtq", Mnemonic::Pcmpgtq);
		h.insert("Pcmpgtw", Mnemonic::Pcmpgtw);
		h.insert("Pcmpistri", Mnemonic::Pcmpistri);
		h.insert("Pcmpistrm", Mnemonic::Pcmpistrm);
		h.insert("Pcommit", Mnemonic::Pcommit);
		h.insert("Pconfig", Mnemonic::Pconfig);
		h.insert("Pdep", Mnemonic::Pdep);
		h.insert("Pext", Mnemonic::Pext);
		h.insert("Pextrb", Mnemonic::Pextrb);
		h.insert("Pextrd", Mnemonic::Pextrd);
		h.insert("Pextrq", Mnemonic::Pextrq);
		h.insert("Pextrw", Mnemonic::Pextrw);
		h.insert("Pf2id", Mnemonic::Pf2id);
		h.insert("Pf2iw", Mnemonic::Pf2iw);
		h.insert("Pfacc", Mnemonic::Pfacc);
		h.insert("Pfadd", Mnemonic::Pfadd);
		h.insert("Pfcmpeq", Mnemonic::Pfcmpeq);
		h.insert("Pfcmpge", Mnemonic::Pfcmpge);
		h.insert("Pfcmpgt", Mnemonic::Pfcmpgt);
		h.insert("Pfmax", Mnemonic::Pfmax);
		h.insert("Pfmin", Mnemonic::Pfmin);
		h.insert("Pfmul", Mnemonic::Pfmul);
		h.insert("Pfnacc", Mnemonic::Pfnacc);
		h.insert("Pfpnacc", Mnemonic::Pfpnacc);
		h.insert("Pfrcp", Mnemonic::Pfrcp);
		h.insert("Pfrcpit1", Mnemonic::Pfrcpit1);
		h.insert("Pfrcpit2", Mnemonic::Pfrcpit2);
		h.insert("Pfrcpv", Mnemonic::Pfrcpv);
		h.insert("Pfrsqit1", Mnemonic::Pfrsqit1);
		h.insert("Pfrsqrt", Mnemonic::Pfrsqrt);
		h.insert("Pfrsqrtv", Mnemonic::Pfrsqrtv);
		h.insert("Pfsub", Mnemonic::Pfsub);
		h.insert("Pfsubr", Mnemonic::Pfsubr);
		h.insert("Phaddd", Mnemonic::Phaddd);
		h.insert("Phaddsw", Mnemonic::Phaddsw);
		h.insert("Phaddw", Mnemonic::Phaddw);
		h.insert("Phminposuw", Mnemonic::Phminposuw);
		h.insert("Phsubd", Mnemonic::Phsubd);
		h.insert("Phsubsw", Mnemonic::Phsubsw);
		h.insert("Phsubw", Mnemonic::Phsubw);
		h.insert("Pi2fd", Mnemonic::Pi2fd);
		h.insert("Pi2fw", Mnemonic::Pi2fw);
		h.insert("Pinsrb", Mnemonic::Pinsrb);
		h.insert("Pinsrd", Mnemonic::Pinsrd);
		h.insert("Pinsrq", Mnemonic::Pinsrq);
		h.insert("Pinsrw", Mnemonic::Pinsrw);
		h.insert("Pmaddubsw", Mnemonic::Pmaddubsw);
		h.insert("Pmaddwd", Mnemonic::Pmaddwd);
		h.insert("Pmaxsb", Mnemonic::Pmaxsb);
		h.insert("Pmaxsd", Mnemonic::Pmaxsd);
		h.insert("Pmaxsw", Mnemonic::Pmaxsw);
		h.insert("Pmaxub", Mnemonic::Pmaxub);
		h.insert("Pmaxud", Mnemonic::Pmaxud);
		h.insert("Pmaxuw", Mnemonic::Pmaxuw);
		h.insert("Pminsb", Mnemonic::Pminsb);
		h.insert("Pminsd", Mnemonic::Pminsd);
		h.insert("Pminsw", Mnemonic::Pminsw);
		h.insert("Pminub", Mnemonic::Pminub);
		h.insert("Pminud", Mnemonic::Pminud);
		h.insert("Pminuw", Mnemonic::Pminuw);
		h.insert("Pmovmskb", Mnemonic::Pmovmskb);
		h.insert("Pmovsxbd", Mnemonic::Pmovsxbd);
		h.insert("Pmovsxbq", Mnemonic::Pmovsxbq);
		h.insert("Pmovsxbw", Mnemonic::Pmovsxbw);
		h.insert("Pmovsxdq", Mnemonic::Pmovsxdq);
		h.insert("Pmovsxwd", Mnemonic::Pmovsxwd);
		h.insert("Pmovsxwq", Mnemonic::Pmovsxwq);
		h.insert("Pmovzxbd", Mnemonic::Pmovzxbd);
		h.insert("Pmovzxbq", Mnemonic::Pmovzxbq);
		h.insert("Pmovzxbw", Mnemonic::Pmovzxbw);
		h.insert("Pmovzxdq", Mnemonic::Pmovzxdq);
		h.insert("Pmovzxwd", Mnemonic::Pmovzxwd);
		h.insert("Pmovzxwq", Mnemonic::Pmovzxwq);
		h.insert("Pmuldq", Mnemonic::Pmuldq);
		h.insert("Pmulhrsw", Mnemonic::Pmulhrsw);
		h.insert("Pmulhrw", Mnemonic::Pmulhrw);
		h.insert("Pmulhuw", Mnemonic::Pmulhuw);
		h.insert("Pmulhw", Mnemonic::Pmulhw);
		h.insert("Pmulld", Mnemonic::Pmulld);
		h.insert("Pmullw", Mnemonic::Pmullw);
		h.insert("Pmuludq", Mnemonic::Pmuludq);
		h.insert("Pop", Mnemonic::Pop);
		h.insert("Popa", Mnemonic::Popa);
		h.insert("Popcnt", Mnemonic::Popcnt);
		h.insert("Popf", Mnemonic::Popf);
		h.insert("Por", Mnemonic::Por);
		h.insert("Prefetch", Mnemonic::Prefetch);
		h.insert("Prefetchnta", Mnemonic::Prefetchnta);
		h.insert("Prefetcht0", Mnemonic::Prefetcht0);
		h.insert("Prefetcht1", Mnemonic::Prefetcht1);
		h.insert("Prefetcht2", Mnemonic::Prefetcht2);
		h.insert("Prefetchw", Mnemonic::Prefetchw);
		h.insert("Prefetchwt1", Mnemonic::Prefetchwt1);
		h.insert("Psadbw", Mnemonic::Psadbw);
		h.insert("Pshufb", Mnemonic::Pshufb);
		h.insert("Pshufd", Mnemonic::Pshufd);
		h.insert("Pshufhw", Mnemonic::Pshufhw);
		h.insert("Pshuflw", Mnemonic::Pshuflw);
		h.insert("Pshufw", Mnemonic::Pshufw);
		h.insert("Psignb", Mnemonic::Psignb);
		h.insert("Psignd", Mnemonic::Psignd);
		h.insert("Psignw", Mnemonic::Psignw);
		h.insert("Pslld", Mnemonic::Pslld);
		h.insert("Pslldq", Mnemonic::Pslldq);
		h.insert("Psllq", Mnemonic::Psllq);
		h.insert("Psllw", Mnemonic::Psllw);
		h.insert("Psrad", Mnemonic::Psrad);
		h.insert("Psraw", Mnemonic::Psraw);
		h.insert("Psrld", Mnemonic::Psrld);
		h.insert("Psrldq", Mnemonic::Psrldq);
		h.insert("Psrlq", Mnemonic::Psrlq);
		h.insert("Psrlw", Mnemonic::Psrlw);
		h.insert("Psubb", Mnemonic::Psubb);
		h.insert("Psubd", Mnemonic::Psubd);
		h.insert("Psubq", Mnemonic::Psubq);
		h.insert("Psubsb", Mnemonic::Psubsb);
		h.insert("Psubsw", Mnemonic::Psubsw);
		h.insert("Psubusb", Mnemonic::Psubusb);
		h.insert("Psubusw", Mnemonic::Psubusw);
		h.insert("Psubw", Mnemonic::Psubw);
		h.insert("Pswapd", Mnemonic::Pswapd);
		h.insert("Ptest", Mnemonic::Ptest);
		h.insert("Ptwrite", Mnemonic::Ptwrite);
		h.insert("Punpckhbw", Mnemonic::Punpckhbw);
		h.insert("Punpckhdq", Mnemonic::Punpckhdq);
		h.insert("Punpckhqdq", Mnemonic::Punpckhqdq);
		h.insert("Punpckhwd", Mnemonic::Punpckhwd);
		h.insert("Punpcklbw", Mnemonic::Punpcklbw);
		h.insert("Punpckldq", Mnemonic::Punpckldq);
		h.insert("Punpcklqdq", Mnemonic::Punpcklqdq);
		h.insert("Punpcklwd", Mnemonic::Punpcklwd);
		h.insert("Push", Mnemonic::Push);
		h.insert("Pusha", Mnemonic::Pusha);
		h.insert("Pushf", Mnemonic::Pushf);
		h.insert("Pxor", Mnemonic::Pxor);
		h.insert("Rcl", Mnemonic::Rcl);
		h.insert("Rcpps", Mnemonic::Rcpps);
		h.insert("Rcpss", Mnemonic::Rcpss);
		h.insert("Rcr", Mnemonic::Rcr);
		h.insert("Rdfsbase", Mnemonic::Rdfsbase);
		h.insert("Rdgsbase", Mnemonic::Rdgsbase);
		h.insert("Rdmsr", Mnemonic::Rdmsr);
		h.insert("Rdpid", Mnemonic::Rdpid);
		h.insert("Rdpkru", Mnemonic::Rdpkru);
		h.insert("Rdpmc", Mnemonic::Rdpmc);
		h.insert("Rdpru", Mnemonic::Rdpru);
		h.insert("Rdrand", Mnemonic::Rdrand);
		h.insert("Rdseed", Mnemonic::Rdseed);
		h.insert("Rdsspd", Mnemonic::Rdsspd);
		h.insert("Rdsspq", Mnemonic::Rdsspq);
		h.insert("Rdtsc", Mnemonic::Rdtsc);
		h.insert("Rdtscp", Mnemonic::Rdtscp);
		h.insert("ReservedNop", Mnemonic::ReservedNop);
		h.insert("Ret", Mnemonic::Ret);
		h.insert("Retf", Mnemonic::Retf);
		h.insert("Rol", Mnemonic::Rol);
		h.insert("Ror", Mnemonic::Ror);
		h.insert("Rorx", Mnemonic::Rorx);
		h.insert("Roundpd", Mnemonic::Roundpd);
		h.insert("Roundps", Mnemonic::Roundps);
		h.insert("Roundsd", Mnemonic::Roundsd);
		h.insert("Roundss", Mnemonic::Roundss);
		h.insert("Rsm", Mnemonic::Rsm);
		h.insert("Rsqrtps", Mnemonic::Rsqrtps);
		h.insert("Rsqrtss", Mnemonic::Rsqrtss);
		h.insert("Rstorssp", Mnemonic::Rstorssp);
		h.insert("Sahf", Mnemonic::Sahf);
		h.insert("Sal", Mnemonic::Sal);
		h.insert("Salc", Mnemonic::Salc);
		h.insert("Sar", Mnemonic::Sar);
		h.insert("Sarx", Mnemonic::Sarx);
		h.insert("Saveprevssp", Mnemonic::Saveprevssp);
		h.insert("Sbb", Mnemonic::Sbb);
		h.insert("Scasb", Mnemonic::Scasb);
		h.insert("Scasd", Mnemonic::Scasd);
		h.insert("Scasq", Mnemonic::Scasq);
		h.insert("Scasw", Mnemonic::Scasw);
		h.insert("Seta", Mnemonic::Seta);
		h.insert("Setae", Mnemonic::Setae);
		h.insert("Setb", Mnemonic::Setb);
		h.insert("Setbe", Mnemonic::Setbe);
		h.insert("Sete", Mnemonic::Sete);
		h.insert("Setg", Mnemonic::Setg);
		h.insert("Setge", Mnemonic::Setge);
		h.insert("Setl", Mnemonic::Setl);
		h.insert("Setle", Mnemonic::Setle);
		h.insert("Setne", Mnemonic::Setne);
		h.insert("Setno", Mnemonic::Setno);
		h.insert("Setnp", Mnemonic::Setnp);
		h.insert("Setns", Mnemonic::Setns);
		h.insert("Seto", Mnemonic::Seto);
		h.insert("Setp", Mnemonic::Setp);
		h.insert("Sets", Mnemonic::Sets);
		h.insert("Setssbsy", Mnemonic::Setssbsy);
		h.insert("Sfence", Mnemonic::Sfence);
		h.insert("Sgdt", Mnemonic::Sgdt);
		h.insert("Sha1msg1", Mnemonic::Sha1msg1);
		h.insert("Sha1msg2", Mnemonic::Sha1msg2);
		h.insert("Sha1nexte", Mnemonic::Sha1nexte);
		h.insert("Sha1rnds4", Mnemonic::Sha1rnds4);
		h.insert("Sha256msg1", Mnemonic::Sha256msg1);
		h.insert("Sha256msg2", Mnemonic::Sha256msg2);
		h.insert("Sha256rnds2", Mnemonic::Sha256rnds2);
		h.insert("Shl", Mnemonic::Shl);
		h.insert("Shld", Mnemonic::Shld);
		h.insert("Shlx", Mnemonic::Shlx);
		h.insert("Shr", Mnemonic::Shr);
		h.insert("Shrd", Mnemonic::Shrd);
		h.insert("Shrx", Mnemonic::Shrx);
		h.insert("Shufpd", Mnemonic::Shufpd);
		h.insert("Shufps", Mnemonic::Shufps);
		h.insert("Sidt", Mnemonic::Sidt);
		h.insert("Skinit", Mnemonic::Skinit);
		h.insert("Sldt", Mnemonic::Sldt);
		h.insert("Slwpcb", Mnemonic::Slwpcb);
		h.insert("Smsw", Mnemonic::Smsw);
		h.insert("Sqrtpd", Mnemonic::Sqrtpd);
		h.insert("Sqrtps", Mnemonic::Sqrtps);
		h.insert("Sqrtsd", Mnemonic::Sqrtsd);
		h.insert("Sqrtss", Mnemonic::Sqrtss);
		h.insert("Stac", Mnemonic::Stac);
		h.insert("Stc", Mnemonic::Stc);
		h.insert("Std", Mnemonic::Std);
		h.insert("Stgi", Mnemonic::Stgi);
		h.insert("Sti", Mnemonic::Sti);
		h.insert("Stmxcsr", Mnemonic::Stmxcsr);
		h.insert("Stosb", Mnemonic::Stosb);
		h.insert("Stosd", Mnemonic::Stosd);
		h.insert("Stosq", Mnemonic::Stosq);
		h.insert("Stosw", Mnemonic::Stosw);
		h.insert("Str", Mnemonic::Str);
		h.insert("Sub", Mnemonic::Sub);
		h.insert("Subpd", Mnemonic::Subpd);
		h.insert("Subps", Mnemonic::Subps);
		h.insert("Subsd", Mnemonic::Subsd);
		h.insert("Subss", Mnemonic::Subss);
		h.insert("Swapgs", Mnemonic::Swapgs);
		h.insert("Syscall", Mnemonic::Syscall);
		h.insert("Sysenter", Mnemonic::Sysenter);
		h.insert("Sysexit", Mnemonic::Sysexit);
		h.insert("Sysret", Mnemonic::Sysret);
		h.insert("T1mskc", Mnemonic::T1mskc);
		h.insert("Test", Mnemonic::Test);
		h.insert("Tpause", Mnemonic::Tpause);
		h.insert("Tzcnt", Mnemonic::Tzcnt);
		h.insert("Tzmsk", Mnemonic::Tzmsk);
		h.insert("Ucomisd", Mnemonic::Ucomisd);
		h.insert("Ucomiss", Mnemonic::Ucomiss);
		h.insert("Ud0", Mnemonic::Ud0);
		h.insert("Ud1", Mnemonic::Ud1);
		h.insert("Ud2", Mnemonic::Ud2);
		h.insert("Umonitor", Mnemonic::Umonitor);
		h.insert("Umov", Mnemonic::Umov);
		h.insert("Umwait", Mnemonic::Umwait);
		h.insert("Unpckhpd", Mnemonic::Unpckhpd);
		h.insert("Unpckhps", Mnemonic::Unpckhps);
		h.insert("Unpcklpd", Mnemonic::Unpcklpd);
		h.insert("Unpcklps", Mnemonic::Unpcklps);
		h.insert("V4fmaddps", Mnemonic::V4fmaddps);
		h.insert("V4fmaddss", Mnemonic::V4fmaddss);
		h.insert("V4fnmaddps", Mnemonic::V4fnmaddps);
		h.insert("V4fnmaddss", Mnemonic::V4fnmaddss);
		h.insert("Vaddpd", Mnemonic::Vaddpd);
		h.insert("Vaddps", Mnemonic::Vaddps);
		h.insert("Vaddsd", Mnemonic::Vaddsd);
		h.insert("Vaddss", Mnemonic::Vaddss);
		h.insert("Vaddsubpd", Mnemonic::Vaddsubpd);
		h.insert("Vaddsubps", Mnemonic::Vaddsubps);
		h.insert("Vaesdec", Mnemonic::Vaesdec);
		h.insert("Vaesdeclast", Mnemonic::Vaesdeclast);
		h.insert("Vaesenc", Mnemonic::Vaesenc);
		h.insert("Vaesenclast", Mnemonic::Vaesenclast);
		h.insert("Vaesimc", Mnemonic::Vaesimc);
		h.insert("Vaeskeygenassist", Mnemonic::Vaeskeygenassist);
		h.insert("Valignd", Mnemonic::Valignd);
		h.insert("Valignq", Mnemonic::Valignq);
		h.insert("Vandnpd", Mnemonic::Vandnpd);
		h.insert("Vandnps", Mnemonic::Vandnps);
		h.insert("Vandpd", Mnemonic::Vandpd);
		h.insert("Vandps", Mnemonic::Vandps);
		h.insert("Vblendmpd", Mnemonic::Vblendmpd);
		h.insert("Vblendmps", Mnemonic::Vblendmps);
		h.insert("Vblendpd", Mnemonic::Vblendpd);
		h.insert("Vblendps", Mnemonic::Vblendps);
		h.insert("Vblendvpd", Mnemonic::Vblendvpd);
		h.insert("Vblendvps", Mnemonic::Vblendvps);
		h.insert("Vbroadcastf128", Mnemonic::Vbroadcastf128);
		h.insert("Vbroadcastf32x2", Mnemonic::Vbroadcastf32x2);
		h.insert("Vbroadcastf32x4", Mnemonic::Vbroadcastf32x4);
		h.insert("Vbroadcastf32x8", Mnemonic::Vbroadcastf32x8);
		h.insert("Vbroadcastf64x2", Mnemonic::Vbroadcastf64x2);
		h.insert("Vbroadcastf64x4", Mnemonic::Vbroadcastf64x4);
		h.insert("Vbroadcasti128", Mnemonic::Vbroadcasti128);
		h.insert("Vbroadcasti32x2", Mnemonic::Vbroadcasti32x2);
		h.insert("Vbroadcasti32x4", Mnemonic::Vbroadcasti32x4);
		h.insert("Vbroadcasti32x8", Mnemonic::Vbroadcasti32x8);
		h.insert("Vbroadcasti64x2", Mnemonic::Vbroadcasti64x2);
		h.insert("Vbroadcasti64x4", Mnemonic::Vbroadcasti64x4);
		h.insert("Vbroadcastsd", Mnemonic::Vbroadcastsd);
		h.insert("Vbroadcastss", Mnemonic::Vbroadcastss);
		h.insert("Vcmppd", Mnemonic::Vcmppd);
		h.insert("Vcmpps", Mnemonic::Vcmpps);
		h.insert("Vcmpsd", Mnemonic::Vcmpsd);
		h.insert("Vcmpss", Mnemonic::Vcmpss);
		h.insert("Vcomisd", Mnemonic::Vcomisd);
		h.insert("Vcomiss", Mnemonic::Vcomiss);
		h.insert("Vcompresspd", Mnemonic::Vcompresspd);
		h.insert("Vcompressps", Mnemonic::Vcompressps);
		h.insert("Vcvtdq2pd", Mnemonic::Vcvtdq2pd);
		h.insert("Vcvtdq2ps", Mnemonic::Vcvtdq2ps);
		h.insert("Vcvtne2ps2bf16", Mnemonic::Vcvtne2ps2bf16);
		h.insert("Vcvtneps2bf16", Mnemonic::Vcvtneps2bf16);
		h.insert("Vcvtpd2dq", Mnemonic::Vcvtpd2dq);
		h.insert("Vcvtpd2ps", Mnemonic::Vcvtpd2ps);
		h.insert("Vcvtpd2qq", Mnemonic::Vcvtpd2qq);
		h.insert("Vcvtpd2udq", Mnemonic::Vcvtpd2udq);
		h.insert("Vcvtpd2uqq", Mnemonic::Vcvtpd2uqq);
		h.insert("Vcvtph2ps", Mnemonic::Vcvtph2ps);
		h.insert("Vcvtps2dq", Mnemonic::Vcvtps2dq);
		h.insert("Vcvtps2pd", Mnemonic::Vcvtps2pd);
		h.insert("Vcvtps2ph", Mnemonic::Vcvtps2ph);
		h.insert("Vcvtps2qq", Mnemonic::Vcvtps2qq);
		h.insert("Vcvtps2udq", Mnemonic::Vcvtps2udq);
		h.insert("Vcvtps2uqq", Mnemonic::Vcvtps2uqq);
		h.insert("Vcvtqq2pd", Mnemonic::Vcvtqq2pd);
		h.insert("Vcvtqq2ps", Mnemonic::Vcvtqq2ps);
		h.insert("Vcvtsd2si", Mnemonic::Vcvtsd2si);
		h.insert("Vcvtsd2ss", Mnemonic::Vcvtsd2ss);
		h.insert("Vcvtsd2usi", Mnemonic::Vcvtsd2usi);
		h.insert("Vcvtsi2sd", Mnemonic::Vcvtsi2sd);
		h.insert("Vcvtsi2ss", Mnemonic::Vcvtsi2ss);
		h.insert("Vcvtss2sd", Mnemonic::Vcvtss2sd);
		h.insert("Vcvtss2si", Mnemonic::Vcvtss2si);
		h.insert("Vcvtss2usi", Mnemonic::Vcvtss2usi);
		h.insert("Vcvttpd2dq", Mnemonic::Vcvttpd2dq);
		h.insert("Vcvttpd2qq", Mnemonic::Vcvttpd2qq);
		h.insert("Vcvttpd2udq", Mnemonic::Vcvttpd2udq);
		h.insert("Vcvttpd2uqq", Mnemonic::Vcvttpd2uqq);
		h.insert("Vcvttps2dq", Mnemonic::Vcvttps2dq);
		h.insert("Vcvttps2qq", Mnemonic::Vcvttps2qq);
		h.insert("Vcvttps2udq", Mnemonic::Vcvttps2udq);
		h.insert("Vcvttps2uqq", Mnemonic::Vcvttps2uqq);
		h.insert("Vcvttsd2si", Mnemonic::Vcvttsd2si);
		h.insert("Vcvttsd2usi", Mnemonic::Vcvttsd2usi);
		h.insert("Vcvttss2si", Mnemonic::Vcvttss2si);
		h.insert("Vcvttss2usi", Mnemonic::Vcvttss2usi);
		h.insert("Vcvtudq2pd", Mnemonic::Vcvtudq2pd);
		h.insert("Vcvtudq2ps", Mnemonic::Vcvtudq2ps);
		h.insert("Vcvtuqq2pd", Mnemonic::Vcvtuqq2pd);
		h.insert("Vcvtuqq2ps", Mnemonic::Vcvtuqq2ps);
		h.insert("Vcvtusi2sd", Mnemonic::Vcvtusi2sd);
		h.insert("Vcvtusi2ss", Mnemonic::Vcvtusi2ss);
		h.insert("Vdbpsadbw", Mnemonic::Vdbpsadbw);
		h.insert("Vdivpd", Mnemonic::Vdivpd);
		h.insert("Vdivps", Mnemonic::Vdivps);
		h.insert("Vdivsd", Mnemonic::Vdivsd);
		h.insert("Vdivss", Mnemonic::Vdivss);
		h.insert("Vdpbf16ps", Mnemonic::Vdpbf16ps);
		h.insert("Vdppd", Mnemonic::Vdppd);
		h.insert("Vdpps", Mnemonic::Vdpps);
		h.insert("Verr", Mnemonic::Verr);
		h.insert("Verw", Mnemonic::Verw);
		h.insert("Vexp2pd", Mnemonic::Vexp2pd);
		h.insert("Vexp2ps", Mnemonic::Vexp2ps);
		h.insert("Vexpandpd", Mnemonic::Vexpandpd);
		h.insert("Vexpandps", Mnemonic::Vexpandps);
		h.insert("Vextractf128", Mnemonic::Vextractf128);
		h.insert("Vextractf32x4", Mnemonic::Vextractf32x4);
		h.insert("Vextractf32x8", Mnemonic::Vextractf32x8);
		h.insert("Vextractf64x2", Mnemonic::Vextractf64x2);
		h.insert("Vextractf64x4", Mnemonic::Vextractf64x4);
		h.insert("Vextracti128", Mnemonic::Vextracti128);
		h.insert("Vextracti32x4", Mnemonic::Vextracti32x4);
		h.insert("Vextracti32x8", Mnemonic::Vextracti32x8);
		h.insert("Vextracti64x2", Mnemonic::Vextracti64x2);
		h.insert("Vextracti64x4", Mnemonic::Vextracti64x4);
		h.insert("Vextractps", Mnemonic::Vextractps);
		h.insert("Vfixupimmpd", Mnemonic::Vfixupimmpd);
		h.insert("Vfixupimmps", Mnemonic::Vfixupimmps);
		h.insert("Vfixupimmsd", Mnemonic::Vfixupimmsd);
		h.insert("Vfixupimmss", Mnemonic::Vfixupimmss);
		h.insert("Vfmadd132pd", Mnemonic::Vfmadd132pd);
		h.insert("Vfmadd132ps", Mnemonic::Vfmadd132ps);
		h.insert("Vfmadd132sd", Mnemonic::Vfmadd132sd);
		h.insert("Vfmadd132ss", Mnemonic::Vfmadd132ss);
		h.insert("Vfmadd213pd", Mnemonic::Vfmadd213pd);
		h.insert("Vfmadd213ps", Mnemonic::Vfmadd213ps);
		h.insert("Vfmadd213sd", Mnemonic::Vfmadd213sd);
		h.insert("Vfmadd213ss", Mnemonic::Vfmadd213ss);
		h.insert("Vfmadd231pd", Mnemonic::Vfmadd231pd);
		h.insert("Vfmadd231ps", Mnemonic::Vfmadd231ps);
		h.insert("Vfmadd231sd", Mnemonic::Vfmadd231sd);
		h.insert("Vfmadd231ss", Mnemonic::Vfmadd231ss);
		h.insert("Vfmaddpd", Mnemonic::Vfmaddpd);
		h.insert("Vfmaddps", Mnemonic::Vfmaddps);
		h.insert("Vfmaddsd", Mnemonic::Vfmaddsd);
		h.insert("Vfmaddss", Mnemonic::Vfmaddss);
		h.insert("Vfmaddsub132pd", Mnemonic::Vfmaddsub132pd);
		h.insert("Vfmaddsub132ps", Mnemonic::Vfmaddsub132ps);
		h.insert("Vfmaddsub213pd", Mnemonic::Vfmaddsub213pd);
		h.insert("Vfmaddsub213ps", Mnemonic::Vfmaddsub213ps);
		h.insert("Vfmaddsub231pd", Mnemonic::Vfmaddsub231pd);
		h.insert("Vfmaddsub231ps", Mnemonic::Vfmaddsub231ps);
		h.insert("Vfmaddsubpd", Mnemonic::Vfmaddsubpd);
		h.insert("Vfmaddsubps", Mnemonic::Vfmaddsubps);
		h.insert("Vfmsub132pd", Mnemonic::Vfmsub132pd);
		h.insert("Vfmsub132ps", Mnemonic::Vfmsub132ps);
		h.insert("Vfmsub132sd", Mnemonic::Vfmsub132sd);
		h.insert("Vfmsub132ss", Mnemonic::Vfmsub132ss);
		h.insert("Vfmsub213pd", Mnemonic::Vfmsub213pd);
		h.insert("Vfmsub213ps", Mnemonic::Vfmsub213ps);
		h.insert("Vfmsub213sd", Mnemonic::Vfmsub213sd);
		h.insert("Vfmsub213ss", Mnemonic::Vfmsub213ss);
		h.insert("Vfmsub231pd", Mnemonic::Vfmsub231pd);
		h.insert("Vfmsub231ps", Mnemonic::Vfmsub231ps);
		h.insert("Vfmsub231sd", Mnemonic::Vfmsub231sd);
		h.insert("Vfmsub231ss", Mnemonic::Vfmsub231ss);
		h.insert("Vfmsubadd132pd", Mnemonic::Vfmsubadd132pd);
		h.insert("Vfmsubadd132ps", Mnemonic::Vfmsubadd132ps);
		h.insert("Vfmsubadd213pd", Mnemonic::Vfmsubadd213pd);
		h.insert("Vfmsubadd213ps", Mnemonic::Vfmsubadd213ps);
		h.insert("Vfmsubadd231pd", Mnemonic::Vfmsubadd231pd);
		h.insert("Vfmsubadd231ps", Mnemonic::Vfmsubadd231ps);
		h.insert("Vfmsubaddpd", Mnemonic::Vfmsubaddpd);
		h.insert("Vfmsubaddps", Mnemonic::Vfmsubaddps);
		h.insert("Vfmsubpd", Mnemonic::Vfmsubpd);
		h.insert("Vfmsubps", Mnemonic::Vfmsubps);
		h.insert("Vfmsubsd", Mnemonic::Vfmsubsd);
		h.insert("Vfmsubss", Mnemonic::Vfmsubss);
		h.insert("Vfnmadd132pd", Mnemonic::Vfnmadd132pd);
		h.insert("Vfnmadd132ps", Mnemonic::Vfnmadd132ps);
		h.insert("Vfnmadd132sd", Mnemonic::Vfnmadd132sd);
		h.insert("Vfnmadd132ss", Mnemonic::Vfnmadd132ss);
		h.insert("Vfnmadd213pd", Mnemonic::Vfnmadd213pd);
		h.insert("Vfnmadd213ps", Mnemonic::Vfnmadd213ps);
		h.insert("Vfnmadd213sd", Mnemonic::Vfnmadd213sd);
		h.insert("Vfnmadd213ss", Mnemonic::Vfnmadd213ss);
		h.insert("Vfnmadd231pd", Mnemonic::Vfnmadd231pd);
		h.insert("Vfnmadd231ps", Mnemonic::Vfnmadd231ps);
		h.insert("Vfnmadd231sd", Mnemonic::Vfnmadd231sd);
		h.insert("Vfnmadd231ss", Mnemonic::Vfnmadd231ss);
		h.insert("Vfnmaddpd", Mnemonic::Vfnmaddpd);
		h.insert("Vfnmaddps", Mnemonic::Vfnmaddps);
		h.insert("Vfnmaddsd", Mnemonic::Vfnmaddsd);
		h.insert("Vfnmaddss", Mnemonic::Vfnmaddss);
		h.insert("Vfnmsub132pd", Mnemonic::Vfnmsub132pd);
		h.insert("Vfnmsub132ps", Mnemonic::Vfnmsub132ps);
		h.insert("Vfnmsub132sd", Mnemonic::Vfnmsub132sd);
		h.insert("Vfnmsub132ss", Mnemonic::Vfnmsub132ss);
		h.insert("Vfnmsub213pd", Mnemonic::Vfnmsub213pd);
		h.insert("Vfnmsub213ps", Mnemonic::Vfnmsub213ps);
		h.insert("Vfnmsub213sd", Mnemonic::Vfnmsub213sd);
		h.insert("Vfnmsub213ss", Mnemonic::Vfnmsub213ss);
		h.insert("Vfnmsub231pd", Mnemonic::Vfnmsub231pd);
		h.insert("Vfnmsub231ps", Mnemonic::Vfnmsub231ps);
		h.insert("Vfnmsub231sd", Mnemonic::Vfnmsub231sd);
		h.insert("Vfnmsub231ss", Mnemonic::Vfnmsub231ss);
		h.insert("Vfnmsubpd", Mnemonic::Vfnmsubpd);
		h.insert("Vfnmsubps", Mnemonic::Vfnmsubps);
		h.insert("Vfnmsubsd", Mnemonic::Vfnmsubsd);
		h.insert("Vfnmsubss", Mnemonic::Vfnmsubss);
		h.insert("Vfpclasspd", Mnemonic::Vfpclasspd);
		h.insert("Vfpclassps", Mnemonic::Vfpclassps);
		h.insert("Vfpclasssd", Mnemonic::Vfpclasssd);
		h.insert("Vfpclassss", Mnemonic::Vfpclassss);
		h.insert("Vfrczpd", Mnemonic::Vfrczpd);
		h.insert("Vfrczps", Mnemonic::Vfrczps);
		h.insert("Vfrczsd", Mnemonic::Vfrczsd);
		h.insert("Vfrczss", Mnemonic::Vfrczss);
		h.insert("Vgatherdpd", Mnemonic::Vgatherdpd);
		h.insert("Vgatherdps", Mnemonic::Vgatherdps);
		h.insert("Vgatherpf0dpd", Mnemonic::Vgatherpf0dpd);
		h.insert("Vgatherpf0dps", Mnemonic::Vgatherpf0dps);
		h.insert("Vgatherpf0qpd", Mnemonic::Vgatherpf0qpd);
		h.insert("Vgatherpf0qps", Mnemonic::Vgatherpf0qps);
		h.insert("Vgatherpf1dpd", Mnemonic::Vgatherpf1dpd);
		h.insert("Vgatherpf1dps", Mnemonic::Vgatherpf1dps);
		h.insert("Vgatherpf1qpd", Mnemonic::Vgatherpf1qpd);
		h.insert("Vgatherpf1qps", Mnemonic::Vgatherpf1qps);
		h.insert("Vgatherqpd", Mnemonic::Vgatherqpd);
		h.insert("Vgatherqps", Mnemonic::Vgatherqps);
		h.insert("Vgetexppd", Mnemonic::Vgetexppd);
		h.insert("Vgetexpps", Mnemonic::Vgetexpps);
		h.insert("Vgetexpsd", Mnemonic::Vgetexpsd);
		h.insert("Vgetexpss", Mnemonic::Vgetexpss);
		h.insert("Vgetmantpd", Mnemonic::Vgetmantpd);
		h.insert("Vgetmantps", Mnemonic::Vgetmantps);
		h.insert("Vgetmantsd", Mnemonic::Vgetmantsd);
		h.insert("Vgetmantss", Mnemonic::Vgetmantss);
		h.insert("Vgf2p8affineinvqb", Mnemonic::Vgf2p8affineinvqb);
		h.insert("Vgf2p8affineqb", Mnemonic::Vgf2p8affineqb);
		h.insert("Vgf2p8mulb", Mnemonic::Vgf2p8mulb);
		h.insert("Vhaddpd", Mnemonic::Vhaddpd);
		h.insert("Vhaddps", Mnemonic::Vhaddps);
		h.insert("Vhsubpd", Mnemonic::Vhsubpd);
		h.insert("Vhsubps", Mnemonic::Vhsubps);
		h.insert("Vinsertf128", Mnemonic::Vinsertf128);
		h.insert("Vinsertf32x4", Mnemonic::Vinsertf32x4);
		h.insert("Vinsertf32x8", Mnemonic::Vinsertf32x8);
		h.insert("Vinsertf64x2", Mnemonic::Vinsertf64x2);
		h.insert("Vinsertf64x4", Mnemonic::Vinsertf64x4);
		h.insert("Vinserti128", Mnemonic::Vinserti128);
		h.insert("Vinserti32x4", Mnemonic::Vinserti32x4);
		h.insert("Vinserti32x8", Mnemonic::Vinserti32x8);
		h.insert("Vinserti64x2", Mnemonic::Vinserti64x2);
		h.insert("Vinserti64x4", Mnemonic::Vinserti64x4);
		h.insert("Vinsertps", Mnemonic::Vinsertps);
		h.insert("Vlddqu", Mnemonic::Vlddqu);
		h.insert("Vldmxcsr", Mnemonic::Vldmxcsr);
		h.insert("Vmaskmovdqu", Mnemonic::Vmaskmovdqu);
		h.insert("Vmaskmovpd", Mnemonic::Vmaskmovpd);
		h.insert("Vmaskmovps", Mnemonic::Vmaskmovps);
		h.insert("Vmaxpd", Mnemonic::Vmaxpd);
		h.insert("Vmaxps", Mnemonic::Vmaxps);
		h.insert("Vmaxsd", Mnemonic::Vmaxsd);
		h.insert("Vmaxss", Mnemonic::Vmaxss);
		h.insert("Vmcall", Mnemonic::Vmcall);
		h.insert("Vmclear", Mnemonic::Vmclear);
		h.insert("Vmfunc", Mnemonic::Vmfunc);
		h.insert("Vminpd", Mnemonic::Vminpd);
		h.insert("Vminps", Mnemonic::Vminps);
		h.insert("Vminsd", Mnemonic::Vminsd);
		h.insert("Vminss", Mnemonic::Vminss);
		h.insert("Vmlaunch", Mnemonic::Vmlaunch);
		h.insert("Vmload", Mnemonic::Vmload);
		h.insert("Vmmcall", Mnemonic::Vmmcall);
		h.insert("Vmovapd", Mnemonic::Vmovapd);
		h.insert("Vmovaps", Mnemonic::Vmovaps);
		h.insert("Vmovd", Mnemonic::Vmovd);
		h.insert("Vmovddup", Mnemonic::Vmovddup);
		h.insert("Vmovdqa", Mnemonic::Vmovdqa);
		h.insert("Vmovdqa32", Mnemonic::Vmovdqa32);
		h.insert("Vmovdqa64", Mnemonic::Vmovdqa64);
		h.insert("Vmovdqu", Mnemonic::Vmovdqu);
		h.insert("Vmovdqu16", Mnemonic::Vmovdqu16);
		h.insert("Vmovdqu32", Mnemonic::Vmovdqu32);
		h.insert("Vmovdqu64", Mnemonic::Vmovdqu64);
		h.insert("Vmovdqu8", Mnemonic::Vmovdqu8);
		h.insert("Vmovhlps", Mnemonic::Vmovhlps);
		h.insert("Vmovhpd", Mnemonic::Vmovhpd);
		h.insert("Vmovhps", Mnemonic::Vmovhps);
		h.insert("Vmovlhps", Mnemonic::Vmovlhps);
		h.insert("Vmovlpd", Mnemonic::Vmovlpd);
		h.insert("Vmovlps", Mnemonic::Vmovlps);
		h.insert("Vmovmskpd", Mnemonic::Vmovmskpd);
		h.insert("Vmovmskps", Mnemonic::Vmovmskps);
		h.insert("Vmovntdq", Mnemonic::Vmovntdq);
		h.insert("Vmovntdqa", Mnemonic::Vmovntdqa);
		h.insert("Vmovntpd", Mnemonic::Vmovntpd);
		h.insert("Vmovntps", Mnemonic::Vmovntps);
		h.insert("Vmovq", Mnemonic::Vmovq);
		h.insert("Vmovsd", Mnemonic::Vmovsd);
		h.insert("Vmovshdup", Mnemonic::Vmovshdup);
		h.insert("Vmovsldup", Mnemonic::Vmovsldup);
		h.insert("Vmovss", Mnemonic::Vmovss);
		h.insert("Vmovupd", Mnemonic::Vmovupd);
		h.insert("Vmovups", Mnemonic::Vmovups);
		h.insert("Vmpsadbw", Mnemonic::Vmpsadbw);
		h.insert("Vmptrld", Mnemonic::Vmptrld);
		h.insert("Vmptrst", Mnemonic::Vmptrst);
		h.insert("Vmread", Mnemonic::Vmread);
		h.insert("Vmresume", Mnemonic::Vmresume);
		h.insert("Vmrun", Mnemonic::Vmrun);
		h.insert("Vmsave", Mnemonic::Vmsave);
		h.insert("Vmulpd", Mnemonic::Vmulpd);
		h.insert("Vmulps", Mnemonic::Vmulps);
		h.insert("Vmulsd", Mnemonic::Vmulsd);
		h.insert("Vmulss", Mnemonic::Vmulss);
		h.insert("Vmwrite", Mnemonic::Vmwrite);
		h.insert("Vmxoff", Mnemonic::Vmxoff);
		h.insert("Vmxon", Mnemonic::Vmxon);
		h.insert("Vorpd", Mnemonic::Vorpd);
		h.insert("Vorps", Mnemonic::Vorps);
		h.insert("Vp2intersectd", Mnemonic::Vp2intersectd);
		h.insert("Vp2intersectq", Mnemonic::Vp2intersectq);
		h.insert("Vp4dpwssd", Mnemonic::Vp4dpwssd);
		h.insert("Vp4dpwssds", Mnemonic::Vp4dpwssds);
		h.insert("Vpabsb", Mnemonic::Vpabsb);
		h.insert("Vpabsd", Mnemonic::Vpabsd);
		h.insert("Vpabsq", Mnemonic::Vpabsq);
		h.insert("Vpabsw", Mnemonic::Vpabsw);
		h.insert("Vpackssdw", Mnemonic::Vpackssdw);
		h.insert("Vpacksswb", Mnemonic::Vpacksswb);
		h.insert("Vpackusdw", Mnemonic::Vpackusdw);
		h.insert("Vpackuswb", Mnemonic::Vpackuswb);
		h.insert("Vpaddb", Mnemonic::Vpaddb);
		h.insert("Vpaddd", Mnemonic::Vpaddd);
		h.insert("Vpaddq", Mnemonic::Vpaddq);
		h.insert("Vpaddsb", Mnemonic::Vpaddsb);
		h.insert("Vpaddsw", Mnemonic::Vpaddsw);
		h.insert("Vpaddusb", Mnemonic::Vpaddusb);
		h.insert("Vpaddusw", Mnemonic::Vpaddusw);
		h.insert("Vpaddw", Mnemonic::Vpaddw);
		h.insert("Vpalignr", Mnemonic::Vpalignr);
		h.insert("Vpand", Mnemonic::Vpand);
		h.insert("Vpandd", Mnemonic::Vpandd);
		h.insert("Vpandn", Mnemonic::Vpandn);
		h.insert("Vpandnd", Mnemonic::Vpandnd);
		h.insert("Vpandnq", Mnemonic::Vpandnq);
		h.insert("Vpandq", Mnemonic::Vpandq);
		h.insert("Vpavgb", Mnemonic::Vpavgb);
		h.insert("Vpavgw", Mnemonic::Vpavgw);
		h.insert("Vpblendd", Mnemonic::Vpblendd);
		h.insert("Vpblendmb", Mnemonic::Vpblendmb);
		h.insert("Vpblendmd", Mnemonic::Vpblendmd);
		h.insert("Vpblendmq", Mnemonic::Vpblendmq);
		h.insert("Vpblendmw", Mnemonic::Vpblendmw);
		h.insert("Vpblendvb", Mnemonic::Vpblendvb);
		h.insert("Vpblendw", Mnemonic::Vpblendw);
		h.insert("Vpbroadcastb", Mnemonic::Vpbroadcastb);
		h.insert("Vpbroadcastd", Mnemonic::Vpbroadcastd);
		h.insert("Vpbroadcastmb2q", Mnemonic::Vpbroadcastmb2q);
		h.insert("Vpbroadcastmw2d", Mnemonic::Vpbroadcastmw2d);
		h.insert("Vpbroadcastq", Mnemonic::Vpbroadcastq);
		h.insert("Vpbroadcastw", Mnemonic::Vpbroadcastw);
		h.insert("Vpclmulqdq", Mnemonic::Vpclmulqdq);
		h.insert("Vpcmov", Mnemonic::Vpcmov);
		h.insert("Vpcmpb", Mnemonic::Vpcmpb);
		h.insert("Vpcmpd", Mnemonic::Vpcmpd);
		h.insert("Vpcmpeqb", Mnemonic::Vpcmpeqb);
		h.insert("Vpcmpeqd", Mnemonic::Vpcmpeqd);
		h.insert("Vpcmpeqq", Mnemonic::Vpcmpeqq);
		h.insert("Vpcmpeqw", Mnemonic::Vpcmpeqw);
		h.insert("Vpcmpestri", Mnemonic::Vpcmpestri);
		h.insert("Vpcmpestri64", Mnemonic::Vpcmpestri64);
		h.insert("Vpcmpestrm", Mnemonic::Vpcmpestrm);
		h.insert("Vpcmpestrm64", Mnemonic::Vpcmpestrm64);
		h.insert("Vpcmpgtb", Mnemonic::Vpcmpgtb);
		h.insert("Vpcmpgtd", Mnemonic::Vpcmpgtd);
		h.insert("Vpcmpgtq", Mnemonic::Vpcmpgtq);
		h.insert("Vpcmpgtw", Mnemonic::Vpcmpgtw);
		h.insert("Vpcmpistri", Mnemonic::Vpcmpistri);
		h.insert("Vpcmpistrm", Mnemonic::Vpcmpistrm);
		h.insert("Vpcmpq", Mnemonic::Vpcmpq);
		h.insert("Vpcmpub", Mnemonic::Vpcmpub);
		h.insert("Vpcmpud", Mnemonic::Vpcmpud);
		h.insert("Vpcmpuq", Mnemonic::Vpcmpuq);
		h.insert("Vpcmpuw", Mnemonic::Vpcmpuw);
		h.insert("Vpcmpw", Mnemonic::Vpcmpw);
		h.insert("Vpcomb", Mnemonic::Vpcomb);
		h.insert("Vpcomd", Mnemonic::Vpcomd);
		h.insert("Vpcompressb", Mnemonic::Vpcompressb);
		h.insert("Vpcompressd", Mnemonic::Vpcompressd);
		h.insert("Vpcompressq", Mnemonic::Vpcompressq);
		h.insert("Vpcompressw", Mnemonic::Vpcompressw);
		h.insert("Vpcomq", Mnemonic::Vpcomq);
		h.insert("Vpcomub", Mnemonic::Vpcomub);
		h.insert("Vpcomud", Mnemonic::Vpcomud);
		h.insert("Vpcomuq", Mnemonic::Vpcomuq);
		h.insert("Vpcomuw", Mnemonic::Vpcomuw);
		h.insert("Vpcomw", Mnemonic::Vpcomw);
		h.insert("Vpconflictd", Mnemonic::Vpconflictd);
		h.insert("Vpconflictq", Mnemonic::Vpconflictq);
		h.insert("Vpdpbusd", Mnemonic::Vpdpbusd);
		h.insert("Vpdpbusds", Mnemonic::Vpdpbusds);
		h.insert("Vpdpwssd", Mnemonic::Vpdpwssd);
		h.insert("Vpdpwssds", Mnemonic::Vpdpwssds);
		h.insert("Vperm2f128", Mnemonic::Vperm2f128);
		h.insert("Vperm2i128", Mnemonic::Vperm2i128);
		h.insert("Vpermb", Mnemonic::Vpermb);
		h.insert("Vpermd", Mnemonic::Vpermd);
		h.insert("Vpermi2b", Mnemonic::Vpermi2b);
		h.insert("Vpermi2d", Mnemonic::Vpermi2d);
		h.insert("Vpermi2pd", Mnemonic::Vpermi2pd);
		h.insert("Vpermi2ps", Mnemonic::Vpermi2ps);
		h.insert("Vpermi2q", Mnemonic::Vpermi2q);
		h.insert("Vpermi2w", Mnemonic::Vpermi2w);
		h.insert("Vpermil2pd", Mnemonic::Vpermil2pd);
		h.insert("Vpermil2ps", Mnemonic::Vpermil2ps);
		h.insert("Vpermilpd", Mnemonic::Vpermilpd);
		h.insert("Vpermilps", Mnemonic::Vpermilps);
		h.insert("Vpermpd", Mnemonic::Vpermpd);
		h.insert("Vpermps", Mnemonic::Vpermps);
		h.insert("Vpermq", Mnemonic::Vpermq);
		h.insert("Vpermt2b", Mnemonic::Vpermt2b);
		h.insert("Vpermt2d", Mnemonic::Vpermt2d);
		h.insert("Vpermt2pd", Mnemonic::Vpermt2pd);
		h.insert("Vpermt2ps", Mnemonic::Vpermt2ps);
		h.insert("Vpermt2q", Mnemonic::Vpermt2q);
		h.insert("Vpermt2w", Mnemonic::Vpermt2w);
		h.insert("Vpermw", Mnemonic::Vpermw);
		h.insert("Vpexpandb", Mnemonic::Vpexpandb);
		h.insert("Vpexpandd", Mnemonic::Vpexpandd);
		h.insert("Vpexpandq", Mnemonic::Vpexpandq);
		h.insert("Vpexpandw", Mnemonic::Vpexpandw);
		h.insert("Vpextrb", Mnemonic::Vpextrb);
		h.insert("Vpextrd", Mnemonic::Vpextrd);
		h.insert("Vpextrq", Mnemonic::Vpextrq);
		h.insert("Vpextrw", Mnemonic::Vpextrw);
		h.insert("Vpgatherdd", Mnemonic::Vpgatherdd);
		h.insert("Vpgatherdq", Mnemonic::Vpgatherdq);
		h.insert("Vpgatherqd", Mnemonic::Vpgatherqd);
		h.insert("Vpgatherqq", Mnemonic::Vpgatherqq);
		h.insert("Vphaddbd", Mnemonic::Vphaddbd);
		h.insert("Vphaddbq", Mnemonic::Vphaddbq);
		h.insert("Vphaddbw", Mnemonic::Vphaddbw);
		h.insert("Vphaddd", Mnemonic::Vphaddd);
		h.insert("Vphadddq", Mnemonic::Vphadddq);
		h.insert("Vphaddsw", Mnemonic::Vphaddsw);
		h.insert("Vphaddubd", Mnemonic::Vphaddubd);
		h.insert("Vphaddubq", Mnemonic::Vphaddubq);
		h.insert("Vphaddubw", Mnemonic::Vphaddubw);
		h.insert("Vphaddudq", Mnemonic::Vphaddudq);
		h.insert("Vphadduwd", Mnemonic::Vphadduwd);
		h.insert("Vphadduwq", Mnemonic::Vphadduwq);
		h.insert("Vphaddw", Mnemonic::Vphaddw);
		h.insert("Vphaddwd", Mnemonic::Vphaddwd);
		h.insert("Vphaddwq", Mnemonic::Vphaddwq);
		h.insert("Vphminposuw", Mnemonic::Vphminposuw);
		h.insert("Vphsubbw", Mnemonic::Vphsubbw);
		h.insert("Vphsubd", Mnemonic::Vphsubd);
		h.insert("Vphsubdq", Mnemonic::Vphsubdq);
		h.insert("Vphsubsw", Mnemonic::Vphsubsw);
		h.insert("Vphsubw", Mnemonic::Vphsubw);
		h.insert("Vphsubwd", Mnemonic::Vphsubwd);
		h.insert("Vpinsrb", Mnemonic::Vpinsrb);
		h.insert("Vpinsrd", Mnemonic::Vpinsrd);
		h.insert("Vpinsrq", Mnemonic::Vpinsrq);
		h.insert("Vpinsrw", Mnemonic::Vpinsrw);
		h.insert("Vplzcntd", Mnemonic::Vplzcntd);
		h.insert("Vplzcntq", Mnemonic::Vplzcntq);
		h.insert("Vpmacsdd", Mnemonic::Vpmacsdd);
		h.insert("Vpmacsdqh", Mnemonic::Vpmacsdqh);
		h.insert("Vpmacsdql", Mnemonic::Vpmacsdql);
		h.insert("Vpmacssdd", Mnemonic::Vpmacssdd);
		h.insert("Vpmacssdqh", Mnemonic::Vpmacssdqh);
		h.insert("Vpmacssdql", Mnemonic::Vpmacssdql);
		h.insert("Vpmacsswd", Mnemonic::Vpmacsswd);
		h.insert("Vpmacssww", Mnemonic::Vpmacssww);
		h.insert("Vpmacswd", Mnemonic::Vpmacswd);
		h.insert("Vpmacsww", Mnemonic::Vpmacsww);
		h.insert("Vpmadcsswd", Mnemonic::Vpmadcsswd);
		h.insert("Vpmadcswd", Mnemonic::Vpmadcswd);
		h.insert("Vpmadd52huq", Mnemonic::Vpmadd52huq);
		h.insert("Vpmadd52luq", Mnemonic::Vpmadd52luq);
		h.insert("Vpmaddubsw", Mnemonic::Vpmaddubsw);
		h.insert("Vpmaddwd", Mnemonic::Vpmaddwd);
		h.insert("Vpmaskmovd", Mnemonic::Vpmaskmovd);
		h.insert("Vpmaskmovq", Mnemonic::Vpmaskmovq);
		h.insert("Vpmaxsb", Mnemonic::Vpmaxsb);
		h.insert("Vpmaxsd", Mnemonic::Vpmaxsd);
		h.insert("Vpmaxsq", Mnemonic::Vpmaxsq);
		h.insert("Vpmaxsw", Mnemonic::Vpmaxsw);
		h.insert("Vpmaxub", Mnemonic::Vpmaxub);
		h.insert("Vpmaxud", Mnemonic::Vpmaxud);
		h.insert("Vpmaxuq", Mnemonic::Vpmaxuq);
		h.insert("Vpmaxuw", Mnemonic::Vpmaxuw);
		h.insert("Vpminsb", Mnemonic::Vpminsb);
		h.insert("Vpminsd", Mnemonic::Vpminsd);
		h.insert("Vpminsq", Mnemonic::Vpminsq);
		h.insert("Vpminsw", Mnemonic::Vpminsw);
		h.insert("Vpminub", Mnemonic::Vpminub);
		h.insert("Vpminud", Mnemonic::Vpminud);
		h.insert("Vpminuq", Mnemonic::Vpminuq);
		h.insert("Vpminuw", Mnemonic::Vpminuw);
		h.insert("Vpmovb2m", Mnemonic::Vpmovb2m);
		h.insert("Vpmovd2m", Mnemonic::Vpmovd2m);
		h.insert("Vpmovdb", Mnemonic::Vpmovdb);
		h.insert("Vpmovdw", Mnemonic::Vpmovdw);
		h.insert("Vpmovm2b", Mnemonic::Vpmovm2b);
		h.insert("Vpmovm2d", Mnemonic::Vpmovm2d);
		h.insert("Vpmovm2q", Mnemonic::Vpmovm2q);
		h.insert("Vpmovm2w", Mnemonic::Vpmovm2w);
		h.insert("Vpmovmskb", Mnemonic::Vpmovmskb);
		h.insert("Vpmovq2m", Mnemonic::Vpmovq2m);
		h.insert("Vpmovqb", Mnemonic::Vpmovqb);
		h.insert("Vpmovqd", Mnemonic::Vpmovqd);
		h.insert("Vpmovqw", Mnemonic::Vpmovqw);
		h.insert("Vpmovsdb", Mnemonic::Vpmovsdb);
		h.insert("Vpmovsdw", Mnemonic::Vpmovsdw);
		h.insert("Vpmovsqb", Mnemonic::Vpmovsqb);
		h.insert("Vpmovsqd", Mnemonic::Vpmovsqd);
		h.insert("Vpmovsqw", Mnemonic::Vpmovsqw);
		h.insert("Vpmovswb", Mnemonic::Vpmovswb);
		h.insert("Vpmovsxbd", Mnemonic::Vpmovsxbd);
		h.insert("Vpmovsxbq", Mnemonic::Vpmovsxbq);
		h.insert("Vpmovsxbw", Mnemonic::Vpmovsxbw);
		h.insert("Vpmovsxdq", Mnemonic::Vpmovsxdq);
		h.insert("Vpmovsxwd", Mnemonic::Vpmovsxwd);
		h.insert("Vpmovsxwq", Mnemonic::Vpmovsxwq);
		h.insert("Vpmovusdb", Mnemonic::Vpmovusdb);
		h.insert("Vpmovusdw", Mnemonic::Vpmovusdw);
		h.insert("Vpmovusqb", Mnemonic::Vpmovusqb);
		h.insert("Vpmovusqd", Mnemonic::Vpmovusqd);
		h.insert("Vpmovusqw", Mnemonic::Vpmovusqw);
		h.insert("Vpmovuswb", Mnemonic::Vpmovuswb);
		h.insert("Vpmovw2m", Mnemonic::Vpmovw2m);
		h.insert("Vpmovwb", Mnemonic::Vpmovwb);
		h.insert("Vpmovzxbd", Mnemonic::Vpmovzxbd);
		h.insert("Vpmovzxbq", Mnemonic::Vpmovzxbq);
		h.insert("Vpmovzxbw", Mnemonic::Vpmovzxbw);
		h.insert("Vpmovzxdq", Mnemonic::Vpmovzxdq);
		h.insert("Vpmovzxwd", Mnemonic::Vpmovzxwd);
		h.insert("Vpmovzxwq", Mnemonic::Vpmovzxwq);
		h.insert("Vpmuldq", Mnemonic::Vpmuldq);
		h.insert("Vpmulhrsw", Mnemonic::Vpmulhrsw);
		h.insert("Vpmulhuw", Mnemonic::Vpmulhuw);
		h.insert("Vpmulhw", Mnemonic::Vpmulhw);
		h.insert("Vpmulld", Mnemonic::Vpmulld);
		h.insert("Vpmullq", Mnemonic::Vpmullq);
		h.insert("Vpmullw", Mnemonic::Vpmullw);
		h.insert("Vpmultishiftqb", Mnemonic::Vpmultishiftqb);
		h.insert("Vpmuludq", Mnemonic::Vpmuludq);
		h.insert("Vpopcntb", Mnemonic::Vpopcntb);
		h.insert("Vpopcntd", Mnemonic::Vpopcntd);
		h.insert("Vpopcntq", Mnemonic::Vpopcntq);
		h.insert("Vpopcntw", Mnemonic::Vpopcntw);
		h.insert("Vpor", Mnemonic::Vpor);
		h.insert("Vpord", Mnemonic::Vpord);
		h.insert("Vporq", Mnemonic::Vporq);
		h.insert("Vpperm", Mnemonic::Vpperm);
		h.insert("Vprold", Mnemonic::Vprold);
		h.insert("Vprolq", Mnemonic::Vprolq);
		h.insert("Vprolvd", Mnemonic::Vprolvd);
		h.insert("Vprolvq", Mnemonic::Vprolvq);
		h.insert("Vprord", Mnemonic::Vprord);
		h.insert("Vprorq", Mnemonic::Vprorq);
		h.insert("Vprorvd", Mnemonic::Vprorvd);
		h.insert("Vprorvq", Mnemonic::Vprorvq);
		h.insert("Vprotb", Mnemonic::Vprotb);
		h.insert("Vprotd", Mnemonic::Vprotd);
		h.insert("Vprotq", Mnemonic::Vprotq);
		h.insert("Vprotw", Mnemonic::Vprotw);
		h.insert("Vpsadbw", Mnemonic::Vpsadbw);
		h.insert("Vpscatterdd", Mnemonic::Vpscatterdd);
		h.insert("Vpscatterdq", Mnemonic::Vpscatterdq);
		h.insert("Vpscatterqd", Mnemonic::Vpscatterqd);
		h.insert("Vpscatterqq", Mnemonic::Vpscatterqq);
		h.insert("Vpshab", Mnemonic::Vpshab);
		h.insert("Vpshad", Mnemonic::Vpshad);
		h.insert("Vpshaq", Mnemonic::Vpshaq);
		h.insert("Vpshaw", Mnemonic::Vpshaw);
		h.insert("Vpshlb", Mnemonic::Vpshlb);
		h.insert("Vpshld", Mnemonic::Vpshld);
		h.insert("Vpshldd", Mnemonic::Vpshldd);
		h.insert("Vpshldq", Mnemonic::Vpshldq);
		h.insert("Vpshldvd", Mnemonic::Vpshldvd);
		h.insert("Vpshldvq", Mnemonic::Vpshldvq);
		h.insert("Vpshldvw", Mnemonic::Vpshldvw);
		h.insert("Vpshldw", Mnemonic::Vpshldw);
		h.insert("Vpshlq", Mnemonic::Vpshlq);
		h.insert("Vpshlw", Mnemonic::Vpshlw);
		h.insert("Vpshrdd", Mnemonic::Vpshrdd);
		h.insert("Vpshrdq", Mnemonic::Vpshrdq);
		h.insert("Vpshrdvd", Mnemonic::Vpshrdvd);
		h.insert("Vpshrdvq", Mnemonic::Vpshrdvq);
		h.insert("Vpshrdvw", Mnemonic::Vpshrdvw);
		h.insert("Vpshrdw", Mnemonic::Vpshrdw);
		h.insert("Vpshufb", Mnemonic::Vpshufb);
		h.insert("Vpshufbitqmb", Mnemonic::Vpshufbitqmb);
		h.insert("Vpshufd", Mnemonic::Vpshufd);
		h.insert("Vpshufhw", Mnemonic::Vpshufhw);
		h.insert("Vpshuflw", Mnemonic::Vpshuflw);
		h.insert("Vpsignb", Mnemonic::Vpsignb);
		h.insert("Vpsignd", Mnemonic::Vpsignd);
		h.insert("Vpsignw", Mnemonic::Vpsignw);
		h.insert("Vpslld", Mnemonic::Vpslld);
		h.insert("Vpslldq", Mnemonic::Vpslldq);
		h.insert("Vpsllq", Mnemonic::Vpsllq);
		h.insert("Vpsllvd", Mnemonic::Vpsllvd);
		h.insert("Vpsllvq", Mnemonic::Vpsllvq);
		h.insert("Vpsllvw", Mnemonic::Vpsllvw);
		h.insert("Vpsllw", Mnemonic::Vpsllw);
		h.insert("Vpsrad", Mnemonic::Vpsrad);
		h.insert("Vpsraq", Mnemonic::Vpsraq);
		h.insert("Vpsravd", Mnemonic::Vpsravd);
		h.insert("Vpsravq", Mnemonic::Vpsravq);
		h.insert("Vpsravw", Mnemonic::Vpsravw);
		h.insert("Vpsraw", Mnemonic::Vpsraw);
		h.insert("Vpsrld", Mnemonic::Vpsrld);
		h.insert("Vpsrldq", Mnemonic::Vpsrldq);
		h.insert("Vpsrlq", Mnemonic::Vpsrlq);
		h.insert("Vpsrlvd", Mnemonic::Vpsrlvd);
		h.insert("Vpsrlvq", Mnemonic::Vpsrlvq);
		h.insert("Vpsrlvw", Mnemonic::Vpsrlvw);
		h.insert("Vpsrlw", Mnemonic::Vpsrlw);
		h.insert("Vpsubb", Mnemonic::Vpsubb);
		h.insert("Vpsubd", Mnemonic::Vpsubd);
		h.insert("Vpsubq", Mnemonic::Vpsubq);
		h.insert("Vpsubsb", Mnemonic::Vpsubsb);
		h.insert("Vpsubsw", Mnemonic::Vpsubsw);
		h.insert("Vpsubusb", Mnemonic::Vpsubusb);
		h.insert("Vpsubusw", Mnemonic::Vpsubusw);
		h.insert("Vpsubw", Mnemonic::Vpsubw);
		h.insert("Vpternlogd", Mnemonic::Vpternlogd);
		h.insert("Vpternlogq", Mnemonic::Vpternlogq);
		h.insert("Vptest", Mnemonic::Vptest);
		h.insert("Vptestmb", Mnemonic::Vptestmb);
		h.insert("Vptestmd", Mnemonic::Vptestmd);
		h.insert("Vptestmq", Mnemonic::Vptestmq);
		h.insert("Vptestmw", Mnemonic::Vptestmw);
		h.insert("Vptestnmb", Mnemonic::Vptestnmb);
		h.insert("Vptestnmd", Mnemonic::Vptestnmd);
		h.insert("Vptestnmq", Mnemonic::Vptestnmq);
		h.insert("Vptestnmw", Mnemonic::Vptestnmw);
		h.insert("Vpunpckhbw", Mnemonic::Vpunpckhbw);
		h.insert("Vpunpckhdq", Mnemonic::Vpunpckhdq);
		h.insert("Vpunpckhqdq", Mnemonic::Vpunpckhqdq);
		h.insert("Vpunpckhwd", Mnemonic::Vpunpckhwd);
		h.insert("Vpunpcklbw", Mnemonic::Vpunpcklbw);
		h.insert("Vpunpckldq", Mnemonic::Vpunpckldq);
		h.insert("Vpunpcklqdq", Mnemonic::Vpunpcklqdq);
		h.insert("Vpunpcklwd", Mnemonic::Vpunpcklwd);
		h.insert("Vpxor", Mnemonic::Vpxor);
		h.insert("Vpxord", Mnemonic::Vpxord);
		h.insert("Vpxorq", Mnemonic::Vpxorq);
		h.insert("Vrangepd", Mnemonic::Vrangepd);
		h.insert("Vrangeps", Mnemonic::Vrangeps);
		h.insert("Vrangesd", Mnemonic::Vrangesd);
		h.insert("Vrangess", Mnemonic::Vrangess);
		h.insert("Vrcp14pd", Mnemonic::Vrcp14pd);
		h.insert("Vrcp14ps", Mnemonic::Vrcp14ps);
		h.insert("Vrcp14sd", Mnemonic::Vrcp14sd);
		h.insert("Vrcp14ss", Mnemonic::Vrcp14ss);
		h.insert("Vrcp28pd", Mnemonic::Vrcp28pd);
		h.insert("Vrcp28ps", Mnemonic::Vrcp28ps);
		h.insert("Vrcp28sd", Mnemonic::Vrcp28sd);
		h.insert("Vrcp28ss", Mnemonic::Vrcp28ss);
		h.insert("Vrcpps", Mnemonic::Vrcpps);
		h.insert("Vrcpss", Mnemonic::Vrcpss);
		h.insert("Vreducepd", Mnemonic::Vreducepd);
		h.insert("Vreduceps", Mnemonic::Vreduceps);
		h.insert("Vreducesd", Mnemonic::Vreducesd);
		h.insert("Vreducess", Mnemonic::Vreducess);
		h.insert("Vrndscalepd", Mnemonic::Vrndscalepd);
		h.insert("Vrndscaleps", Mnemonic::Vrndscaleps);
		h.insert("Vrndscalesd", Mnemonic::Vrndscalesd);
		h.insert("Vrndscaless", Mnemonic::Vrndscaless);
		h.insert("Vroundpd", Mnemonic::Vroundpd);
		h.insert("Vroundps", Mnemonic::Vroundps);
		h.insert("Vroundsd", Mnemonic::Vroundsd);
		h.insert("Vroundss", Mnemonic::Vroundss);
		h.insert("Vrsqrt14pd", Mnemonic::Vrsqrt14pd);
		h.insert("Vrsqrt14ps", Mnemonic::Vrsqrt14ps);
		h.insert("Vrsqrt14sd", Mnemonic::Vrsqrt14sd);
		h.insert("Vrsqrt14ss", Mnemonic::Vrsqrt14ss);
		h.insert("Vrsqrt28pd", Mnemonic::Vrsqrt28pd);
		h.insert("Vrsqrt28ps", Mnemonic::Vrsqrt28ps);
		h.insert("Vrsqrt28sd", Mnemonic::Vrsqrt28sd);
		h.insert("Vrsqrt28ss", Mnemonic::Vrsqrt28ss);
		h.insert("Vrsqrtps", Mnemonic::Vrsqrtps);
		h.insert("Vrsqrtss", Mnemonic::Vrsqrtss);
		h.insert("Vscalefpd", Mnemonic::Vscalefpd);
		h.insert("Vscalefps", Mnemonic::Vscalefps);
		h.insert("Vscalefsd", Mnemonic::Vscalefsd);
		h.insert("Vscalefss", Mnemonic::Vscalefss);
		h.insert("Vscatterdpd", Mnemonic::Vscatterdpd);
		h.insert("Vscatterdps", Mnemonic::Vscatterdps);
		h.insert("Vscatterpf0dpd", Mnemonic::Vscatterpf0dpd);
		h.insert("Vscatterpf0dps", Mnemonic::Vscatterpf0dps);
		h.insert("Vscatterpf0qpd", Mnemonic::Vscatterpf0qpd);
		h.insert("Vscatterpf0qps", Mnemonic::Vscatterpf0qps);
		h.insert("Vscatterpf1dpd", Mnemonic::Vscatterpf1dpd);
		h.insert("Vscatterpf1dps", Mnemonic::Vscatterpf1dps);
		h.insert("Vscatterpf1qpd", Mnemonic::Vscatterpf1qpd);
		h.insert("Vscatterpf1qps", Mnemonic::Vscatterpf1qps);
		h.insert("Vscatterqpd", Mnemonic::Vscatterqpd);
		h.insert("Vscatterqps", Mnemonic::Vscatterqps);
		h.insert("Vshuff32x4", Mnemonic::Vshuff32x4);
		h.insert("Vshuff64x2", Mnemonic::Vshuff64x2);
		h.insert("Vshufi32x4", Mnemonic::Vshufi32x4);
		h.insert("Vshufi64x2", Mnemonic::Vshufi64x2);
		h.insert("Vshufpd", Mnemonic::Vshufpd);
		h.insert("Vshufps", Mnemonic::Vshufps);
		h.insert("Vsqrtpd", Mnemonic::Vsqrtpd);
		h.insert("Vsqrtps", Mnemonic::Vsqrtps);
		h.insert("Vsqrtsd", Mnemonic::Vsqrtsd);
		h.insert("Vsqrtss", Mnemonic::Vsqrtss);
		h.insert("Vstmxcsr", Mnemonic::Vstmxcsr);
		h.insert("Vsubpd", Mnemonic::Vsubpd);
		h.insert("Vsubps", Mnemonic::Vsubps);
		h.insert("Vsubsd", Mnemonic::Vsubsd);
		h.insert("Vsubss", Mnemonic::Vsubss);
		h.insert("Vtestpd", Mnemonic::Vtestpd);
		h.insert("Vtestps", Mnemonic::Vtestps);
		h.insert("Vucomisd", Mnemonic::Vucomisd);
		h.insert("Vucomiss", Mnemonic::Vucomiss);
		h.insert("Vunpckhpd", Mnemonic::Vunpckhpd);
		h.insert("Vunpckhps", Mnemonic::Vunpckhps);
		h.insert("Vunpcklpd", Mnemonic::Vunpcklpd);
		h.insert("Vunpcklps", Mnemonic::Vunpcklps);
		h.insert("Vxorpd", Mnemonic::Vxorpd);
		h.insert("Vxorps", Mnemonic::Vxorps);
		h.insert("Vzeroall", Mnemonic::Vzeroall);
		h.insert("Vzeroupper", Mnemonic::Vzeroupper);
		h.insert("Wait", Mnemonic::Wait);
		h.insert("Wbinvd", Mnemonic::Wbinvd);
		h.insert("Wbnoinvd", Mnemonic::Wbnoinvd);
		h.insert("Wrfsbase", Mnemonic::Wrfsbase);
		h.insert("Wrgsbase", Mnemonic::Wrgsbase);
		h.insert("Wrmsr", Mnemonic::Wrmsr);
		h.insert("Wrpkru", Mnemonic::Wrpkru);
		h.insert("Wrssd", Mnemonic::Wrssd);
		h.insert("Wrssq", Mnemonic::Wrssq);
		h.insert("Wrussd", Mnemonic::Wrussd);
		h.insert("Wrussq", Mnemonic::Wrussq);
		h.insert("Xabort", Mnemonic::Xabort);
		h.insert("Xadd", Mnemonic::Xadd);
		h.insert("Xbegin", Mnemonic::Xbegin);
		h.insert("Xbts", Mnemonic::Xbts);
		h.insert("Xchg", Mnemonic::Xchg);
		h.insert("Xcryptcbc", Mnemonic::Xcryptcbc);
		h.insert("Xcryptcfb", Mnemonic::Xcryptcfb);
		h.insert("Xcryptctr", Mnemonic::Xcryptctr);
		h.insert("Xcryptecb", Mnemonic::Xcryptecb);
		h.insert("Xcryptofb", Mnemonic::Xcryptofb);
		h.insert("Xend", Mnemonic::Xend);
		h.insert("Xgetbv", Mnemonic::Xgetbv);
		h.insert("Xlatb", Mnemonic::Xlatb);
		h.insert("Xor", Mnemonic::Xor);
		h.insert("Xorpd", Mnemonic::Xorpd);
		h.insert("Xorps", Mnemonic::Xorps);
		h.insert("Xrstor", Mnemonic::Xrstor);
		h.insert("Xrstor64", Mnemonic::Xrstor64);
		h.insert("Xrstors", Mnemonic::Xrstors);
		h.insert("Xrstors64", Mnemonic::Xrstors64);
		h.insert("Xsave", Mnemonic::Xsave);
		h.insert("Xsave64", Mnemonic::Xsave64);
		h.insert("Xsavec", Mnemonic::Xsavec);
		h.insert("Xsavec64", Mnemonic::Xsavec64);
		h.insert("Xsaveopt", Mnemonic::Xsaveopt);
		h.insert("Xsaveopt64", Mnemonic::Xsaveopt64);
		h.insert("Xsaves", Mnemonic::Xsaves);
		h.insert("Xsaves64", Mnemonic::Xsaves64);
		h.insert("Xsetbv", Mnemonic::Xsetbv);
		h.insert("Xsha1", Mnemonic::Xsha1);
		h.insert("Xsha256", Mnemonic::Xsha256);
		h.insert("Xstore", Mnemonic::Xstore);
		h.insert("Xtest", Mnemonic::Xtest);
		// GENERATOR-END: MnemonicHash
		h
	};
}
